cfast_pb2
Data
p0
(tRp1
(dp2
S'serialized'
p3
S'\n\xd2D\x08\x00B\xdc\x11\x08\x06*\xcf\x11/*\n * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.\n *\n * Copyright 1997-2010 Oracle and/or its affiliates. All rights reserved.\n *\n * Oracle and Java are registered trademarks of Oracle and/or its affiliates.\n * Other names may be trademarks of their respective owners.\n *\n * The contents of this file are subject to the terms of either the GNU\n * General Public License Version 2 only ("GPL") or the Common\n * Development and Distribution License("CDDL") (collectively, the\n * "License"). You may not use this file except in compliance with the\n * License. You can obtain a copy of the License at\n * http://www.netbeans.org/cddl-gplv2.html\n * or nbbuild/licenses/CDDL-GPL-2-CP. See the License for the\n * specific language governing permissions and limitations under the\n * License.  When distributing the software, include this License Header\n * Notice in each file and include the License file at\n * nbbuild/licenses/CDDL-GPL-2-CP.  Oracle designates this\n * particular file as subject to the "Classpath" exception as provided\n * by Oracle in the GPL Version 2 section of the License file that\n * accompanied this code. If applicable, add the following below the\n * License Header, with the fields enclosed by brackets [] replaced by\n * your own identifying information:\n * "Portions Copyrighted [year] [name of copyright owner]"\n *\n * Contributor(s):\n * The Original Software is NetBeans. The Initial Developer of the Original\n * Software is Sun Microsystems, Inc. Portions Copyright 1997-2006 Sun\n * Microsystems, Inc. All Rights Reserved.\n *\n * If you wish your version of this file to be governed by only the CDDL\n * or only the GPL Version 2, indicate your decision by adding\n * "[Contributor] elects to include this software in this distribution\n * under the [CDDL or GPL Version 2] license." If you do not indicate a\n * single choice of license, a recipient has the option to distribute\n * your version of this file under either the CDDL, the GPL Version 2 or\n * to extend the choice of license to its licensees as provided above.\n * However, if you add GPL Version 2 code and therefore, elected the GPL\n * Version 2 license, then the option applies only if the new code is\n * made subject to such option by the copyright holder.\n */J\x02\n\n`\x01h\x01B\xef\x01\x08\xd0\x01*\x08package B\xce\x01\x086B\x14\x086*\x03orgB\x07\x08\x89\x02`,h\x0c`,h\tB\x12\x084*\x01.B\x07\x08\x89\x02`,h\r`,h\x0cB\x19\x086*\x08netbeansB\x07\x08\x89\x02`,h\x15`,h\rB\x12\x084*\x01.B\x07\x08\x89\x02`,h\x16`,h\x15B\x14\x086*\x03libB\x07\x08\x89\x02`,h\x19`,h\x16B\x12\x084*\x01.B\x07\x08\x89\x02`,h\x1a`,h\x19B\x19\x086*\x08profilerB\x07\x08\x89\x02`,h"`,h\x1aB\x12\x084*\x01.B\x07\x08\x89\x02`,h#`,h"B\x15\x086*\x04heapB\x07\x08\x89\x02`,h\'`,h#J\x01;B\x07\x08\x89\x02`,h(J\x02\n\n`,h\x01B\x96\x01\x08\xcf\x01*\x07import Bx\x086B\x15\x086*\x04javaB\x07\x08\x89\x02`.h\x0c`.h\x08B\x12\x084*\x01.B\x07\x08\x89\x02`.h\r`.h\x0cB\x15\x086*\x04utilB\x07\x08\x89\x02`.h\x11`.h\rB\x12\x084*\x01.B\x07\x08\x89\x02`.h\x12`.h\x11B\x1b\x086*\nCollectionB\x07\x08\x89\x02`.h\x1c`.h\x12J\x01;B\x07\x08\x89\x02`.h\x1dJ\x01\n`.h\x01B\x90\x01\x08\xcf\x01*\x07import Br\x086B\x15\x086*\x04javaB\x07\x08\x89\x02`/h\x0c`/h\x08B\x12\x084*\x01.B\x07\x08\x89\x02`/h\r`/h\x0cB\x15\x086*\x04utilB\x07\x08\x89\x02`/h\x11`/h\rB\x12\x084*\x01.B\x07\x08\x89\x02`/h\x12`/h\x11B\x15\x086*\x04ListB\x07\x08\x89\x02`/h\x16`/h\x12J\x01;B\x07\x08\x89\x02`/h\x17J\x01\n`/h\x01B\x98\x01\x08\xcf\x01*\x07import Bx\x086B\x15\x086*\x04javaB\x07\x08\x89\x02`0h\x0c`0h\x08B\x12\x084*\x01.B\x07\x08\x89\x02`0h\r`0h\x0cB\x15\x086*\x04utilB\x07\x08\x89\x02`0h\x11`0h\rB\x12\x084*\x01.B\x07\x08\x89\x02`0h\x12`0h\x11B\x1b\x086*\nPropertiesB\x07\x08\x89\x02`0h\x1c`0h\x12J\x01;B\x07\x08\x89\x02`0h\x1dJ\x03\n\n\n`0h\x01Bp\x08\x06*e/**\n * This is top-level interface representing one instance of heap dump.\n * @author Tomas Hurka\n */J\x01\n`3h\x01B\xa3,\x08\xd2\x01B%\x08\xba\x02*\x06publicB\x07\x08\x89\x02`7h\x07J\x0b interface `7h\x01B\x18\x086*\x04HeapB\x07\x08\x89\x02`7h\x16J\x01 `7h\x12B\xd9+\x08<*\x06{\n    B\x8e\x01\x08\x06*~//~ Methods ------------------------------------------------------------------------------------------------------------------J\x06\n\n    `8h\x05B\xc0\x02\x08\x06*\xb0\x02/**\n     * computes List of all {@link JavaClass} instances in this heap.\n     * The classes are ordered according to the position in the dump file.\n     * &lt;br&gt;\n     * Speed: slow for the first time, subsequent invocations are fast.\n     * @return list of all {@link JavaClass} in the heap.\n     */J\x05\n    `:h\x05B\x8f\x01\x08\rB\x1c\x089B\x15\x086*\x04ListB\x07\x08\x89\x02`Ah\t`Ah\x05J\x01 B \x08\x06*\x15/*&lt;JavaClass&gt;*/J\x01 `Ah\nB\x1e\x086*\rgetAllClassesB\x07\x08\x89\x02`Ah\'`Ah\x1aB\x16\x08d*\x02()B\x07\x08\x89\x02`Ah)J\x01;`Ah\'B\x07\x08\x89\x02`Ah*J\n\n    \n    B\xc2\x02\x08\x06*\xb2\x02/**\n     * computes List of N biggest {@link JavaClass} instances in this heap.\n     * The classes are ordered according to their retained size.\n     * &lt;br&gt;\n     * Speed: slow for the first time, subsequent invocations are normal.\n     * @return list of N biggest {@link JavaClass} instances.\n     */J\x05\n    `Ch\x05B\xe1\x01\x08\rB\x1c\x089B\x15\x086*\x04ListB\x07\x08\x89\x02`Jh\t`Jh\x05J\x01 B \x08\x06*\x15/*&lt;JavaClass&gt;*/J\x01 `Jh\nB0\x086*\x1fgetBiggestObjectsByRetainedSizeB\x07\x08\x89\x02`Jh9`Jh\x1aBV\x08d*\x01(B?\x08eB8\x08\x01B\x1b\x089B\x14\x086*\x03intB\x07\x08\x89\x02`Jh=`Jh:J\x01 B\x17\x086*\x06numberB\x07\x08\x89\x02`JhD`Jh>J\x01)B\x07\x08\x89\x02`JhEJ\x01;`Jh9B\x07\x08\x89\x02`JhFJ\n\n    \n    B\xf1\x02\x08\x06*\xe1\x02/**\n     * returns {@link GCRoot} for {@link Instance}.\n     * &lt;br&gt;\n     * Speed: normal for first invocation, fast for subsequent\n     * @param instance {@link Instance} whose associated {@link GCRoot} is to be returned.\n     * @return {@link GCRoot} for corresponding instance or &lt;CODE&gt;null&lt;/CODE&gt; if instance is not GC root.\n     */J\x05\n    `Lh\x05B\xae\x01\x08\rB\x1e\x089B\x17\x086*\x06GCRootB\x07\x08\x89\x02`Sh\x0b`Sh\x05J\x01 B\x1a\x086*\tgetGCRootB\x07\x08\x89\x02`Sh\x15`Sh\x0cB]\x08d*\x01(BF\x08eB?\x08\x01B \x089B\x19\x086*\x08InstanceB\x07\x08\x89\x02`Sh\x1e`Sh\x16J\x01 B\x19\x086*\x08instanceB\x07\x08\x89\x02`Sh\'`Sh\x1fJ\x01)B\x07\x08\x89\x02`Sh(J\x01;`Sh\x15B\x07\x08\x89\x02`Sh)J\x06\n\n    B\xdc\x01\x08\x06*\xcc\x01/**\n     * returns list of all GC roots.\n     * &lt;br&gt;\n     * Speed: normal for first invocation, fast for subsequent\n     * @return list of {@link GCRoot} instances representing all GC roots.\n     */J\x05\n    `Uh\x05B\x8b\x01\x08\rB"\x089B\x1b\x086*\nCollectionB\x07\x08\x89\x02`[h\x0f`[h\x05J\x01 B\x1d\x08\x06*\x12/*&lt;GCRoot&gt;*/J\x01 `[h\x10B\x1b\x086*\ngetGCRootsB\x07\x08\x89\x02`[h\'`[h\x1dB\x16\x08d*\x02()B\x07\x08\x89\x02`[h)J\x01;`[h\'B\x07\x08\x89\x02`[h*J\x06\n\n    B\xad\x03\x08\x06*\x9d\x03/**\n     * computes {@link Instance} for instanceId.\n     * &lt;br&gt;\n     * Speed: fast\n     * @param instanceId unique ID of {@link Instance}\n     * @return return &lt;CODE&gt;null&lt;/CODE&gt; if there no {@link Instance} with instanceId, otherwise\n     * corresponding {@link Instance} is returned so that\n     * &lt;CODE&gt;heap.getInstanceByID(instanceId).getInstanceId() == instanceId&lt;/CODE&gt;\n     */J\x05\n    `]h\x05B\xb4\x01\x08\rB \x089B\x19\x086*\x08InstanceB\x07\x08\x89\x02`fh\r`fh\x05J\x01 B \x086*\x0fgetInstanceByIDB\x07\x08\x89\x02`fh\x1d`fh\x0eB[\x08d*\x01(BD\x08eB=\x08\x01B\x1c\x089B\x15\x086*\x04longB\x07\x08\x89\x02`fh"`fh\x1eJ\x01 B\x1b\x086*\ninstanceIdB\x07\x08\x89\x02`fh-`fh#J\x01)B\x07\x08\x89\x02`fh.J\x01;`fh\x1dB\x07\x08\x89\x02`fh/J\x06\n\n    B\xaa\x03\x08\x06*\x9a\x03/**\n     * computes {@link JavaClass} for javaclassId.\n     * &lt;br&gt;\n     * Speed: fast\n     * @param javaclassId unique ID of {@link JavaClass}\n     * @return return &lt;CODE&gt;null&lt;/CODE&gt; if there no java class with javaclassId, otherwise corresponding {@link JavaClass}\n     * is returned so that &lt;CODE&gt;heap.getJavaClassByID(javaclassId).getJavaClassId() == javaclassId&lt;/CODE&gt;\n     */J\x05\n    `hh\x05B\xb7\x01\x08\rB!\x089B\x1a\x086*\tJavaClassB\x07\x08\x89\x02`ph\x0e`ph\x05J\x01 B!\x086*\x10getJavaClassByIDB\x07\x08\x89\x02`ph\x1f`ph\x0fB\\\x08d*\x01(BE\x08eB>\x08\x01B\x1c\x089B\x15\x086*\x04longB\x07\x08\x89\x02`ph$`ph J\x01 B\x1c\x086*\x0bjavaclassIdB\x07\x08\x89\x02`ph0`ph%J\x01)B\x07\x08\x89\x02`ph1J\x01;`ph\x1fB\x07\x08\x89\x02`ph2J\x06\n\n    B\x9c\x03\x08\x06*\x8c\x03/**\n     * computes {@link JavaClass} for fully qualified name.\n     * &lt;br&gt;\n     * Speed: slow\n     * @param fqn fully qualified name of the java class.\n     * @return return &lt;CODE&gt;null&lt;/CODE&gt; if there no class with fqn name, otherwise corresponding {@link JavaClass}\n     * is returned so that &lt;CODE&gt;heap.getJavaClassByName(fqn).getName().equals(fqn)&lt;/CODE&gt;\n     */J\x05\n    `rh\x05B\xb3\x01\x08\rB!\x089B\x1a\x086*\tJavaClassB\x07\x08\x89\x02`zh\x0e`zh\x05J\x01 B#\x086*\x12getJavaClassByNameB\x07\x08\x89\x02`zh!`zh\x0fBV\x08d*\x01(B?\x08eB8\x08\x01B\x1e\x089B\x17\x086*\x06StringB\x07\x08\x89\x02`zh(`zh"J\x01 B\x14\x086*\x03fqnB\x07\x08\x89\x02`zh,`zh)J\x01)B\x07\x08\x89\x02`zh-J\x01;`zh!B\x07\x08\x89\x02`zh.J\x06\n\n    B\x85\x03\x08\x06*\xf5\x02/**\n     * computes collection of {@link JavaClass} filtered by regular rexpression.\n     * &lt;br&gt;\n     * Speed: slow\n     * @param regexp regular expression for java class name.\n     * @return return collection of {@link JavaClass} instances, which names satisfy the regexp expression. This\n     * collection is empty if no class matches the regular expression\n     */J\x05\n    `|h\x05B\xc6\x01\x08\rB$\x089B\x1d\x086*\nCollectionB\x08\x08\x89\x02`\x84\x01h\x0f`\x84\x01h\x05J\x01 B)\x086*\x16getJavaClassesByRegExpB\x08\x08\x89\x02`\x84\x01h&`\x84\x01h\x10B_\x08d*\x01(BF\x08eB?\x08\x01B \x089B\x19\x086*\x06StringB\x08\x08\x89\x02`\x84\x01h-`\x84\x01h\'J\x01 B\x19\x086*\x06regexpB\x08\x08\x89\x02`\x84\x01h4`\x84\x01h.J\x01)B\x08\x08\x89\x02`\x84\x01h5J\x01;`\x84\x01h&B\x08\x08\x89\x02`\x84\x01h6J\x06\n\n    B\x94\x03\x08\x06*\x83\x03/**\n     * returns optional summary information of the heap.\n     * If this information is not available in the dump,\n     * some data (like number of instances) are computed\n     * from the dump itself.\n     * &lt;br&gt;\n     * Speed: fast if the summary is available in dump, slow if\n     * summary needs to be computed from dump.\n     * @return {@link HeapSummary} of the heap\n     */J\x05\n    `\x86\x01h\x05Bt\x08\rB%\x089B\x1e\x086*\x0bHeapSummaryB\x08\x08\x89\x02`\x90\x01h\x10`\x90\x01h\x05J\x01 B\x1d\x086*\ngetSummaryB\x08\x08\x89\x02`\x90\x01h\x1b`\x90\x01h\x11B\x18\x08d*\x02()B\x08\x08\x89\x02`\x90\x01h\x1dJ\x01;`\x90\x01h\x1bB\x08\x08\x89\x02`\x90\x01h\x1eJ\x06\n\n    B\xa2\x03\x08\x06*\x91\x03/**\n     * Determines the system properties of the {@link Heap}. It returns {@link Properties} with the same\n     * content as if {@link System#getProperties()} was invoked in JVM, where this heap dump was taken.\n     * &lt;br&gt;\n     * Speed: slow\n     * @return the system properties or &lt;CODE&gt;null&lt;/CODE&gt; if the system properties cannot be computed from\n     * this {@link Heap}\n     */J\x05\n    `\x92\x01h\x05Bx\x08\rB$\x089B\x1d\x086*\nPropertiesB\x08\x08\x89\x02`\x9a\x01h\x0f`\x9a\x01h\x05J\x01 B&\x086*\x13getSystemPropertiesB\x08\x08\x89\x02`\x9a\x01h#`\x9a\x01h\x10B\x18\x08d*\x02()B\x08\x08\x89\x02`\x9a\x01h%J\x01;`\x9a\x01h#B\x08\x08\x89\x02`\x9a\x01h&J\x02\n}B\x08\x08\x89\x02`\x9b\x01h\x02`7h\x17J\x01\nR\x1e\n\x13heap/java/2171.java\x12\x050.9.5\x18\x06'
p4
sb.