cfast_pb2
Data
p0
(tRp1
(dp2
S'serialized'
p3
S'\n\x80\x1d\x08\x00B\xc0\x01\x08\xd0\x01*\x08package B\x9f\x01\x086B\x14\x086*\x03eduB\x07\x08\x89\x02`\x01h\x0c`\x01h\tB\x12\x084*\x01.B\x07\x08\x89\x02`\x01h\r`\x01h\x0cB\x19\x086*\x08stanfordB\x07\x08\x89\x02`\x01h\x15`\x01h\rB\x12\x084*\x01.B\x07\x08\x89\x02`\x01h\x16`\x01h\x15B\x14\x086*\x03nlpB\x07\x08\x89\x02`\x01h\x19`\x01h\x16B\x12\x084*\x01.B\x07\x08\x89\x02`\x01h\x1a`\x01h\x19B\x15\x086*\x04utilB\x07\x08\x89\x02`\x01h\x1e`\x01h\x1aJ\x01;B\x07\x08\x89\x02`\x01h\x1fJ\x02\n\n`\x01h\x01B\x95\x01\x08\xcf\x01*\x07import Bv\x086B\x15\x086*\x04javaB\x07\x08\x89\x02`\x03h\x0c`\x03h\x08B\x12\x084*\x01.B\x07\x08\x89\x02`\x03h\r`\x03h\x0cB\x15\x086*\x04utilB\x07\x08\x89\x02`\x03h\x11`\x03h\rB\x12\x084*\x01.B\x07\x08\x89\x02`\x03h\x12`\x03h\x11B\x19\x086*\x08IteratorB\x07\x08\x89\x02`\x03h\x1a`\x03h\x12J\x01;B\x07\x08\x89\x02`\x03h\x1bJ\x02\n\n`\x03h\x01B\x84\x04\x08\x06*\xf8\x03/**\n * Heap interface.\n * These heaps implement a decreaseKey operation, which requires\n * a separate Object to Index map, and for objects to be unique in the Heap.\n * &lt;p/&gt;\n * An interface cannot specify constructors, but it is nevertheless\n * expected that an implementation of this interface has a constructor\n * that takes a Comparator, which is used for ordering ("scoring")\n * objects:\n * &lt;code&gt;public Heap(Comparator cmp) {}&lt;/code&gt;\n *\n * @author Dan Klein\n * @version 12/14/00\n */J\x01\n`\x05h\x01B\xf9\x15\x08\xd2\x01B%\x08\xba\x02*\x06publicB\x07\x08\x89\x02`\x13h\x07J\x0b interface `\x13h\x01BQ\x086B\x15\x086*\x04HeapB\x07\x08\x89\x02`\x13h\x16`\x13h\x12B3\x08d*\x04&lt;B\x1c\x08eB\x12\x086*\x01EB\x07\x08\x89\x02`\x13h\x18`\x13h\x17J\x04&gt;B\x07\x08\x89\x02`\x13h\x1c`\x13h\x16J\x01 B\xf6\x14\x08<*\x05{\n\n  B\x84\x01\x08\x06*w/**\n   * Returns the minimum object, then removes that object from the heap.\n   *\n   * @return the minimum object\n   */J\x03\n  `\x15h\x03B~\x08\rB\x1b\x08\xba\x02*\x06publicB\x07\x08\x89\x02`\x1ah\tJ\x01 `\x1ah\x03B\x19\x089B\x12\x086*\x01EB\x07\x08\x89\x02`\x1ah\x0b`\x1ah\nJ\x01 B\x1b\x086*\nextractMinB\x07\x08\x89\x02`\x1ah\x16`\x1ah\x0cB\x16\x08d*\x02()B\x07\x08\x89\x02`\x1ah\x18J\x01;`\x1ah\x16B\x07\x08\x89\x02`\x1ah\x19J\x04\n\n  B\x83\x01\x08\x06*v/**\n   * Returns the minimum Object in this heap. The heap is not modified.\n   *\n   * @return the minimum object\n   */J\x03\n  `\x1ch\x03Bw\x08\rB\x1b\x08\xba\x02*\x06publicB\x07\x08\x89\x02`!h\tJ\x01 `!h\x03B\x19\x089B\x12\x086*\x01EB\x07\x08\x89\x02`!h\x0b`!h\nJ\x01 B\x14\x086*\x03minB\x07\x08\x89\x02`!h\x0f`!h\x0cB\x16\x08d*\x02()B\x07\x08\x89\x02`!h\x11J\x01;`!h\x0fB\x07\x08\x89\x02`!h\x12J\x04\n\n  B\x80\x02\x08\x06*\xf2\x01/**\n   * Adds the object to the heap.  If the object is in the heap, this\n   * should act as a decrease-key (if the new version has better\n   * priority) or a no-op (otherwise).\n   *\n   * @param o a new element\n   * @return true, always\n   */J\x03\n  `#h\x03B\xb6\x01\x08\rB\x1b\x08\xba\x02*\x06publicB\x07\x08\x89\x02`+h\tJ\x01 `+h\x03B\x1f\x089B\x18\x086*\x07booleanB\x07\x08\x89\x02`+h\x11`+h\nJ\x01 B\x14\x086*\x03addB\x07\x08\x89\x02`+h\x15`+h\x12BO\x08d*\x01(B8\x08eB1\x08\x01B\x19\x089B\x12\x086*\x01EB\x07\x08\x89\x02`+h\x17`+h\x16J\x01 B\x12\x086*\x01oB\x07\x08\x89\x02`+h\x19`+h\x18J\x01)B\x07\x08\x89\x02`+h\x1aJ\x01;`+h\x15B\x07\x08\x89\x02`+h\x1bJ\x04\n\n  Bk\x08\x06*^/**\n   * The number of elements currently in the heap.\n   *\n   * @return the heap\'s size\n   */J\x03\n  `-h\x03Bz\x08\rB\x1b\x08\xba\x02*\x06publicB\x07\x08\x89\x02`2h\tJ\x01 `2h\x03B\x1b\x089B\x14\x086*\x03intB\x07\x08\x89\x02`2h\r`2h\nJ\x01 B\x15\x086*\x04sizeB\x07\x08\x89\x02`2h\x12`2h\x0eB\x16\x08d*\x02()B\x07\x08\x89\x02`2h\x14J\x01;`2h\x12B\x07\x08\x89\x02`2h\x15J\x04\n\n  Bz\x08\x06*m/**\n   * Returns true iff the heap is empty.\n   *\n   * @return a &lt;code&gt;boolean&lt;/code&gt; value\n   */J\x03\n  `4h\x03B\x81\x01\x08\rB\x1b\x08\xba\x02*\x06publicB\x07\x08\x89\x02`9h\tJ\x01 `9h\x03B\x1f\x089B\x18\x086*\x07booleanB\x07\x08\x89\x02`9h\x11`9h\nJ\x01 B\x18\x086*\x07isEmptyB\x07\x08\x89\x02`9h\x19`9h\x12B\x16\x08d*\x02()B\x07\x08\x89\x02`9h\x1bJ\x01;`9h\x19B\x07\x08\x89\x02`9h\x1cJ\x04\n\n  B\xfb\x04\x08\x06*\xed\x04/**\n   * Raises the priority of an object in the heap.  This works in a\n   * somewhat unusual way -- the object &lt;code&gt;o&lt;/code&gt; should have\n   * changed with respect to the comparator passed in to the heap on\n   * construction.  However, it should NOT have changed with respect\n   * to its equals() method.  This is unlike the Java SortedSet where\n   * the comparator should be consistent with equals(); here they\n   * should not match.\n   *\n   * @param o an &lt;code&gt;Object&lt;/code&gt; value which has changed wrt the heap\'s ordering\n   * @return the cost of the decrease-key operation, for analysis\n   */J\x03\n  `;h\x03B\xb7\x01\x08\rB\x1b\x08\xba\x02*\x06publicB\x07\x08\x89\x02`Gh\tJ\x01 `Gh\x03B\x1b\x089B\x14\x086*\x03intB\x07\x08\x89\x02`Gh\r`Gh\nJ\x01 B\x1c\x086*\x0bdecreaseKeyB\x07\x08\x89\x02`Gh\x19`Gh\x0eBO\x08d*\x01(B8\x08eB1\x08\x01B\x19\x089B\x12\x086*\x01EB\x07\x08\x89\x02`Gh\x1b`Gh\x1aJ\x01 B\x12\x086*\x01oB\x07\x08\x89\x02`Gh\x1d`Gh\x1cJ\x01)B\x07\x08\x89\x02`Gh\x1eJ\x01;`Gh\x19B\x07\x08\x89\x02`Gh\x1fJ\x01 B1\x08\x06*#// should be void; int for analysisJ\x04\n\n  `Gh B\x89\x01\x08\x06*|/**\n   * Returns an iterator over its elements, in order.\n   *\n   * @return an &lt;code&gt;Iterator&lt;/code&gt; value\n   */J\x03\n  `Ih\x03B\xbb\x01\x08\rB\x1b\x08\xba\x02*\x06publicB\x07\x08\x89\x02`Nh\tJ\x01 `Nh\x03BY\x089BR\x086B\x19\x086*\x08IteratorB\x07\x08\x89\x02`Nh\x12`Nh\nB3\x08h*\x04&lt;B\x1c\x08iB\x12\x086*\x01EB\x07\x08\x89\x02`Nh\x14`Nh\x13J\x04&gt;B\x07\x08\x89\x02`Nh\x18`Nh\x12J\x01 B\x19\x086*\x08iteratorB\x07\x08\x89\x02`Nh\x1e`Nh\x16B\x16\x08d*\x02()B\x07\x08\x89\x02`Nh J\x01;`Nh\x1eB\x07\x08\x89\x02`Nh!J\x03\n\n}B\x07\x08\x89\x02`Ph\x02`\x13h\x1aJ\x01\nR\x1e\n\x13heap/java/2235.java\x12\x050.9.5\x18\x06'
p4
sb.