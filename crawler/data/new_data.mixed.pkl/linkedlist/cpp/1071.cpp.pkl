cfast_pb2
Data
p0
(tRp1
(dp2
S'serialized'
p3
S'\n\xbe\x99\x01\x08\x00:\xdc\x01\x08\x06"\xd4\x01/*\n  Get Nth element from the end in a linked list of integers\n  Number of elements in the list will always be greater than N.\n  Node is defined as \n  struct Node\n  {\n     int data;\n     struct Node *next;\n  }\n*/B\x01\n:\xb3\x07\x08\x0c:\x0e\x089:\x07\x086"\x03intB\x01 :\x0b\x086"\x07GetNode:f\x08d"\x01(:+\x08e:$\x08\x01:\x16\x089:\x0b\x086"\x04NodeB\x01 :\x05\x085"\x01*:\x08\x086"\x04headB\x01,:/\x08e:(\x08\x01:\x0e\x089:\x07\x086"\x03intB\x01 :\x14\x086"\x10positionFromTailB\x01)B\x01\n:\xa5\x06\x08<"\x04{\n  :0\x08\x06"\'// This is a "method-only" submission. B\x03\n  :3\x08\x06"*// You only need to complete this method. B\x03\n  :I\x08\x02:@\x08\x01:\x16\x089:\x08\x086"\x04Node:\x05\x085"\x01*B\x01 :\x0b\x086"\x04nodeB\x01 :\x14\x08\x03"\x02= :\x0c\x08\x04:\x08\x086"\x04headB\x01;B\x03\n  :?\x08\x02:6\x08\x01:\x0e\x089:\x07\x086"\x03intB\x01 :\x08\x086"\x01NB\x01 :\x15\x08\x03"\x02= :\r\x08\x04:\t\x080"\x010R\x02\x08\x01B\x01;B\x03\n  :\xd3\x01\x08\x95\x02"\x05while:J\x08;"\x01(:@\x08\x04:$\x086:\x08\x086"\x04node:\t\x084"\x05-&gt;:\x08\x086"\x04nextB\x01 :\t\x084"\x02!=B\x01 :\x08\x086"\x04NULLB\x01)B\x01 :v\x08<"\x06{\n    :\x1f\x08\x05:\x14\x08\x04:\x05\x086"\x01N:\x06\x084"\x02++B\x01;B\x05\n    :I\x08\x05:?\x08\x04:\x0b\x086"\x04nodeB\x01 :\x08\x084"\x01=B\x01 :!\x086:\x08\x086"\x04node:\t\x084"\x05-&gt;:\x08\x086"\x04nextB\x01;B\x04\n  }B\x03\n  :/\x08\x05:&\x08\x04:\x0b\x086"\x04nodeB\x01 :\x08\x084"\x01=B\x01 :\x08\x086"\x04headB\x01;B\x03\n  :Z\x08\x02:Q\x08\x01:\x0e\x089:\x07\x086"\x03intB\x01 :\n\x086"\x03posB\x01 :.\x08\x03"\x02= :&\x08\x04:\x05\x086"\x01N:\x05\x084"\x01-:\x14\x086"\x10positionFromTailB\x01;B\x03\n  :\x88\x01\x08\x95\x02"\x05while: \x08;"\x01(:\x16\x08\x04:\x07\x086"\x03pos:\x06\x084"\x02--B\x01)B\x01 :U\x08<"\x06{\n    :I\x08\x05:?\x08\x04:\x0b\x086"\x04nodeB\x01 :\x08\x084"\x01=B\x01 :!\x086:\x08\x086"\x04node:\t\x084"\x05-&gt;:\x08\x086"\x04nextB\x01;B\x04\n  }B\x03\n  ::\x08\xaa\x02"\x07return :(\x08\x04:!\x086:\x08\x086"\x04node:\t\x084"\x05-&gt;:\x08\x086"\x04dataB\x01;B\x02\n}B\x02\n\n:\xbc\x01\x08\x06"\xb4\x01/*\n  Compare two linked lists A and B\n  Return 1 if they are identical and 0 if they are not. \n  Node is defined as \n  struct Node\n  {\n     int data;\n     struct Node *next;\n  }\n*/B\x01\n:\xa6\x0b\x08\x0c:\x0e\x089:\x07\x086"\x03intB\x01 :\x10\x086"\x0cCompareLists:e\x08d"\x01(:-\x08e:%\x08\x01:\x16\x089:\x0b\x086"\x04NodeB\x01 :\x05\x085"\x01*:\t\x086"\x05headAB\x02, :,\x08e:%\x08\x01:\x16\x089:\x08\x086"\x04Node:\x05\x085"\x01*B\x01 :\t\x086"\x05headBB\x01)B\x01\n:\x94\n\x08<"\x04{\n  :0\x08\x06"\'// This is a "method-only" submission. B\x03\n  :1\x08\x06")// You only need to complete this method B\x02\n\t:H\x08\x02:>\x08\x01:\x16\x089:\x08\x086"\x04Node:\x05\x085"\x01*B\x01 :\x08\x086"\x01AB\x01 :\x15\x08\x03"\x02= :\r\x08\x04:\t\x086"\x05headAB\x01;B\x04\n  \t:L\x08\x02:>\x08\x01:\x16\x089:\x08\x086"\x04Node:\x05\x085"\x01*B\x01 :\x08\x086"\x01BB\x01 :\x15\x08\x03"\x02= :\r\x08\x04:\t\x086"\x05headBB\x01;B\x08\n  \t\n  \t:\xe1\x06\x08\x95\x02"\x05while:\x1a\x08;"\x01(:\x10\x08\x04:\t\x080"\x011R\x02\x08\x01B\x01)B\x01 :\xb2\x06\x08<"\x08{\n      :\xa5\x01\x08\x98\x02"\x02if:`\x08;"\x01(:Y\x08\x04:\x08\x086"\x01AB\x01 :\t\x084"\x02==B\x01 :\x0b\x086"\x04NULLB\x01 :\x11\x084"\n&amp;&amp;B\x01 :\x08\x086"\x01BB\x01 :\t\x084"\x02==B\x01 :\x08\x086"\x04NULLB\x01):1\x08C"\t\n        :"\x08<:\x1e\x08\xaa\x02"\x07return :\x10\x08\x04:\t\x080"\x011R\x02\x08\x01B\x01;B\x07\n      :\xa2\x01\x08\x98\x02"\x02if:]\x08;"\x01(:V\x08\x04:\x08\x086"\x01AB\x01 :\t\x084"\x02!=B\x01 :\x0b\x086"\x04NULLB\x01 :\x11\x084"\n&amp;&amp;B\x01 :\x05\x086"\x01B:\t\x084"\x02==B\x01 :\x08\x086"\x04NULLB\x01):1\x08C"\t\n        :"\x08<:\x1e\x08\xaa\x02"\x07return :\x10\x08\x04:\t\x080"\x010R\x02\x08\x01B\x01;B\x07\n      :\xa5\x01\x08\x98\x02"\x02if:`\x08;"\x01(:Y\x08\x04:\x08\x086"\x01AB\x01 :\t\x084"\x02==B\x01 :\x0b\x086"\x04NULLB\x01 :\x11\x084"\n&amp;&amp;B\x01 :\x08\x086"\x01BB\x01 :\t\x084"\x02!=B\x01 :\x08\x086"\x04NULLB\x01):1\x08C"\t\n        :"\x08<:\x1e\x08\xaa\x02"\x07return :\x10\x08\x04:\t\x080"\x010R\x02\x08\x01B\x01;B\x07\n      :\x9f\x01\x08\x98\x02"\x02if:Z\x08;"\x01(:S\x08\x04:!\x086:\x05\x086"\x01A:\t\x084"\x05-&gt;:\x08\x086"\x04dataB\x01 :\t\x084"\x02!=B\x01 :\x1e\x086:\x05\x086"\x01B:\t\x084"\x05-&gt;:\x08\x086"\x04dataB\x01):1\x08C"\t\n        :"\x08<:\x1e\x08\xaa\x02"\x07return :\x10\x08\x04:\t\x080"\x010R\x02\x08\x01B\x01;B\x07\n      :F\x08\x05:9\x08\x04:\x08\x086"\x01AB\x01 :\x08\x084"\x01=B\x01 :\x1e\x086:\x05\x086"\x01A:\t\x084"\x05-&gt;:\x08\x086"\x04nextB\x01;B\x07\n      :E\x08\x05:9\x08\x04:\x08\x086"\x01BB\x01 :\x08\x084"\x01=B\x01 :\x1e\x086:\x05\x086"\x01B:\t\x084"\x05-&gt;:\x08\x086"\x04nextB\x01;B\x06\n    }B\x04\n  \t:\x84\x01\x08\x98\x02"\x02if:D\x08;"\x01(:=\x08\x04:!\x086:\x05\x086"\x01B:\t\x084"\x05-&gt;:\x08\x086"\x04nextB\x01 :\t\x084"\x02!=B\x01 :\x08\x086"\x04NULLB\x01):/\x08C"\x07\n      :"\x08<:\x1e\x08\xaa\x02"\x07return :\x10\x08\x04:\t\x080"\x010R\x02\x08\x01B\x01;B\x04\n  \t:"\x08\xaa\x02"\x07return :\x10\x08\x04:\t\x080"\x011R\x02\x08\x01B\x01;B\x02\n}B\x02\n\n:\x9a\x01\x08\x06"\x92\x01/*\n  Remove all duplicate elements from a sorted linked list\n  Node is defined as \n  struct Node\n  {\n     int data;\n     struct Node *next;\n  }\n*/B\x01\n:\xb6\x07\x08\x0c:\x16\x089:\x08\x086"\x04Node:\x05\x085"\x01*B\x01 :\x14\x086"\x10RemoveDuplicates:5\x08d"\x01(:+\x08e:$\x08\x01:\x16\x089:\x0b\x086"\x04NodeB\x01 :\x05\x085"\x01*:\x08\x086"\x04headB\x01)B\x01\n:\xc8\x06\x08<"\x04{\n  :0\x08\x06"\'// This is a "method-only" submission. B\x03\n  :3\x08\x06"*// You only need to complete this method. B\x03\n \t:K\x08\x02:?\x08\x01:\x16\x089:\x0b\x086"\x04NodeB\x01 :\x05\x085"\x01*:\n\x086"\x03curB\x01 :\x14\x08\x03"\x02= :\x0c\x08\x04:\x08\x086"\x04headB\x01;B\x06 \n    :\xe6\x04\x08\x95\x02"\x06while :0\x08;"\x01(:&\x08\x04:\n\x086"\x03curB\x01 :\t\x084"\x02!=B\x01 :\x08\x086"\x04NULLB\x01)B\x01 :\x9f\x04\x08<"\n{\n        :g\x08\x02:X\x08\x01:\x16\x089:\x0b\x086"\x04NodeB\x01 :\x05\x085"\x01*:\x0b\x086"\x04nextB\x01 :,\x08\x03"\x02= :$\x08\x04: \x086:\x07\x086"\x03cur:\t\x084"\x05-&gt;:\x08\x086"\x04nextB\x01;B\t\n        :\xa5\x03\x08\x98\x02"\x03if :\xb4\x01\x08;"\x01(:\xac\x01\x08\x04:\x05\x084"\x01(:\x0b\x086"\x04nextB\x01 :\t\x084"\x02!=B\x01 :\x08\x086"\x04NULL:\x08\x084"\x01)B\x01 :\x11\x084"\n&amp;&amp;B\x01 :\x05\x084"\x01(:$\x086:\x08\x086"\x04next:\t\x084"\x05-&gt;:\x08\x086"\x04dataB\x01 :\t\x084"\x02==B\x01 : \x086:\x07\x086"\x03cur:\t\x084"\x05-&gt;:\x08\x086"\x04data:\x05\x084"\x01)B\x01):\x85\x01\x08C"\x01 :{\x08<"\x0e{\n            :g\x08\x05:W\x08\x04:#\x086:\x07\x086"\x03cur:\t\x084"\x05-&gt;:\x08\x086"\x04nextB\x01 :\x08\x084"\x01=B\x01 :!\x086:\x08\x086"\x04next:\t\x084"\x05-&gt;:\x08\x086"\x04nextB\x01;B\n\n        }B\x01 :T\x08D"\x05else :I\x08<"\x0e{\n            :5\x08\x05:%\x08\x04:\n\x086"\x03curB\x01 :\x08\x084"\x01=B\x01 :\x08\x086"\x04nextB\x01;B\n\n        }B\x06\n    }B\x05\n    :!\x08\xaa\x02"\x07return :\x0f\x08\x04:\x08\x086"\x04headB\x01;B\x02\n}B\x02\n\n:\x94\x01\x08\x06"\x8c\x01/*\n  Delete Node at a given position in a linked list \n  Node is defined as \n  struct Node\n  {\n     int data;\n     struct Node *next;\n  }\n*/B\x01\n:\xc0\x08\x08\x0c:\x16\x089:\x08\x086"\x04Node:\x05\x085"\x01*B\x01 :\n\x086"\x06Delete:_\x08d"\x01(:,\x08e:$\x08\x01:\x16\x089:\x0b\x086"\x04NodeB\x01 :\x05\x085"\x01*:\x08\x086"\x04headB\x02, :\'\x08e: \x08\x01:\x0e\x089:\x07\x086"\x03intB\x01 :\x0c\x086"\x08positionB\x01)B\x01\n:\xb2\x07\x08<"\x04{\n  : \x08\x06"\x17// Complete this methodB\x03\n  :I\x08\x02:@\x08\x01:\x16\x089:\x08\x086"\x04Node:\x05\x085"\x01*B\x01 :\x0b\x086"\x04tempB\x01 :\x14\x08\x03"\x02= :\x0c\x08\x04:\x08\x086"\x04headB\x01;B\x03\n  :\x97\x06\x08\x98\x02"\x02if:3\x08;"\x01(:,\x08\x04:\x0f\x086"\x08positionB\x01 :\t\x084"\x02==B\x01 :\t\x080"\x010R\x02\x08\x01B\x01):\x8d\x01\x08C:\x88\x01\x08<"\x06{\n    :F\x08\x05:?\x08\x04:\x0b\x086"\x04headB\x01 :\x08\x084"\x01=B\x01 :!\x086:\x08\x086"\x04head:\t\x084"\x05-&gt;:\x08\x086"\x04nextB\x01;B\x01 :4\x08\x06"*//move from head (1st node) to second nodeB\x04\n  }:\xc0\x04\x08D"\x04else:\xb5\x04\x08<"\x06{\n    :K\x08\x02:@\x08\x01:\x16\x089:\x08\x086"\x04Node:\x05\x085"\x01*B\x01 :\x0b\x086"\x04prevB\x01 :\x14\x08\x03"\x02= :\x0c\x08\x04:\x08\x086"\x04headB\x01;B\x05\n    :J\x08\x05:?\x08\x04:\x0b\x086"\x04tempB\x01 :\x08\x084"\x01=B\x01 :!\x086:\x08\x086"\x04head:\t\x084"\x05-&gt;:\x08\x086"\x04nextB\x01;B\x05\n    :\xab\x02\x08\x97\x02"\x03for:\x81\x01\x08\x08"\x01(:6\x08\x03:2\x08\x01:\x0e\x089:\x07\x086"\x03intB\x01 :\x05\x086"\x01i:\x14\x08\x03"\x01=:\r\x08\x04:\t\x080"\x011R\x02\x08\x01B\x01;:(\x08;:$\x08\x04:\x05\x086"\x01i:\x08\x084"\x04&lt;:\x0c\x086"\x08positionB\x01;:\x18\x08\t:\x11\x08\x04:\x06\x084"\x02++:\x05\x086"\x01iB\x01):\x95\x01\x08<"\x08{\n      :3\x08\x05:&\x08\x04:\x0b\x086"\x04prevB\x01 :\x08\x084"\x01=B\x01 :\x08\x086"\x04tempB\x01;B\x07\n      :R\x08\x05:?\x08\x04:\x0b\x086"\x04tempB\x01 :\x08\x084"\x01=B\x01 :!\x086:\x08\x086"\x04temp:\t\x084"\x05-&gt;:\x08\x086"\x04nextB\x01;B\r\n      \n    }B\x05\n    :b\x08\x05:X\x08\x04:$\x086:\x08\x086"\x04prev:\t\x084"\x05-&gt;:\x08\x086"\x04nextB\x01 :\x08\x084"\x01=B\x01 :!\x086:\x08\x086"\x04temp:\t\x084"\x05-&gt;:\x08\x086"\x04nextB\x01;B\x04\n  }B\x06\n  \n  :!\x08\xaa\x02"\x07return :\x0f\x08\x04:\x08\x086"\x04headB\x01;B\x02\n}B\x02\n\n:\x9a\x02\x08\x06"\x92\x02/*\n  Insert Node at the begining of a linked list\n  Initially head pointer argument could be NULL for empty list\n  Node is defined as \n  struct Node\n  {\n     int data;\n     struct Node *next;\n  }\nreturn back the pointer to the head of the linked list in the below method.\n*/B\x01\n:\xab\x04\x08\x0c:\x16\x089:\x08\x086"\x04Node:\x05\x085"\x01*B\x01 :\n\x086"\x06Insert:Z\x08d"\x01(:+\x08e:$\x08\x01:\x16\x089:\x0b\x086"\x04NodeB\x01 :\x05\x085"\x01*:\x08\x086"\x04headB\x01,:#\x08e:\x1c\x08\x01:\x0e\x089:\x07\x086"\x03intB\x01 :\x08\x086"\x04dataB\x01)B\x01\n:\xa2\x03\x08<"\x04{\n  : \x08\x06"\x17// Complete this methodB\x03\n  :d\x08\x02:[\x08\x01:\x16\x089:\x08\x086"\x04Node:\x05\x085"\x01*B\x01 :\x0e\x086"\x07newHeadB\x01 :,\x08\x03"\x02= :$\x08\x04:\n\x084"\x03newB\x01 :\x14\x08\x07:\x08\x086"\x04Node:\x06\x08h"\x02()B\x01;B\x03\n  :N\x08\x05:B\x08\x04:\'\x086:\x0b\x086"\x07newHead:\t\x084"\x05-&gt;:\x08\x086"\x04dataB\x01 :\x08\x084"\x01=B\x01 :\x08\x086"\x04dataB\x01;B\x06\n  \n  :\x96\x01\x08\x98\x02"\x02if:.\x08;"\x01(:\'\x08\x04:\x0b\x086"\x04headB\x01 :\t\x084"\x02!=B\x01 :\x08\x086"\x04NULLB\x01):U\x08C"\x05\n    :J\x08<:F\x08\x05:B\x08\x04:\'\x086:\x0b\x086"\x07newHead:\t\x084"\x05-&gt;:\x08\x086"\x04nextB\x01 :\x08\x084"\x01=B\x01 :\x08\x086"\x04headB\x01;B\x06\n  \n  :\'\x08\xaa\x02"\x07return :\x12\x08\x04:\x0b\x086"\x07newHeadB\x01;B\x05\n  \n}B\x02\n\n:\xc5\x01\x08\x06"\xbd\x01/*\n  Insert Node at the end of a linked list \n  head pointer input could be NULL as well for empty list\n  Node is defined as \n  struct Node\n  {\n     int data;\n     struct Node *next;\n  }\n*/B\x01\n:\xca\x06\x08\x0c:\x16\x089:\x08\x086"\x04Node:\x05\x085"\x01*B\x01 :\n\x086"\x06Insert:Z\x08d"\x01(:+\x08e:$\x08\x01:\x16\x089:\x0b\x086"\x04NodeB\x01 :\x05\x085"\x01*:\x08\x086"\x04headB\x01,:#\x08e:\x1c\x08\x01:\x0e\x089:\x07\x086"\x03intB\x01 :\x08\x086"\x04dataB\x01)B\x01\n:\xc1\x05\x08<"\x04{\n  : \x08\x06"\x17// Complete this methodB\x03\n  :a\x08\x02:X\x08\x01:\x16\x089:\x08\x086"\x04Node:\x05\x085"\x01*B\x01 :\x0b\x086"\x04tailB\x01 :,\x08\x03"\x02= :$\x08\x04:\n\x084"\x03newB\x01 :\x14\x08\x07:\x08\x086"\x04Node:\x06\x08h"\x02()B\x01;B\x03\n  :K\x08\x05:?\x08\x04:$\x086:\x08\x086"\x04tail:\t\x084"\x05-&gt;:\x08\x086"\x04dataB\x01 :\x08\x084"\x01=B\x01 :\x08\x086"\x04dataB\x01;B\x06\n  \n  :w\x08\x98\x02"\x02if:.\x08;"\x01(:\'\x08\x04:\x0b\x086"\x04headB\x01 :\t\x084"\x02==B\x01 :\x08\x086"\x04NULLB\x01):6\x08C"\x01 :/\x08<"\x06{\n    :#\x08\xaa\x02"\x07return :\x0f\x08\x04:\x08\x086"\x04tailB\x01;B\x04\n  }B\x06\n  \n  :H\x08\x02:?\x08\x01:\x16\x089:\x08\x086"\x04Node:\x05\x085"\x01*B\x01 :\n\x086"\x03curB\x01 :\x14\x08\x03"\x02= :\x0c\x08\x04:\x08\x086"\x04headB\x01;B\x03\n  :\xb2\x01\x08\x95\x02"\x05while:I\x08;"\x01(:?\x08\x04:#\x086:\x07\x086"\x03cur:\t\x084"\x05-&gt;:\x08\x086"\x04nextB\x01 :\t\x084"\x02!=B\x01 :\x08\x086"\x04NULLB\x01)B\x01 :S\x08<"\x06{\n    :G\x08\x05:=\x08\x04:\n\x086"\x03curB\x01 :\x08\x084"\x01=B\x01 : \x086:\x07\x086"\x03cur:\t\x084"\x05-&gt;:\x08\x086"\x04nextB\x01;B\x04\n  }B\x06\n  \n  :J\x08\x05:>\x08\x04:#\x086:\x07\x086"\x03cur:\t\x084"\x05-&gt;:\x08\x086"\x04nextB\x01 :\x08\x084"\x01=B\x01 :\x08\x086"\x04tailB\x01;B\x06\n  \n  :!\x08\xaa\x02"\x07return :\x0f\x08\x04:\x08\x086"\x04headB\x01;B\x02\n}B\x02\n\n:\x88\x01\x08\x06"\x80\x01/*\n   Find merge point of two linked lists\n   Node is defined as\n   struct Node\n   {\n       int data;\n       Node* next;\n   }\n*/B\x01\n:\x97\x07\x08\x0c:\x0e\x089:\x07\x086"\x03intB\x01 :\x11\x086"\rFindMergeNode:e\x08d"\x01(:-\x08e:%\x08\x01:\x16\x089:\x0b\x086"\x04NodeB\x01 :\x05\x085"\x01*:\t\x086"\x05headAB\x02, :,\x08e:%\x08\x01:\x16\x089:\x0b\x086"\x04NodeB\x01 :\x05\x085"\x01*:\t\x086"\x05headBB\x01)B\x01\n:\x84\x06\x08<"\x06{\n    :$\x08\x06"\x19// Complete this functionB\x05\n    :*\x08\x06"!// Do not write the main method. B\x03\n  :J\x08\x02:A\x08\x01:\x16\x089:\x08\x086"\x04Node:\x05\x085"\x01*B\x01 :\x0b\x086"\x04curAB\x01 :\x15\x08\x03"\x02= :\r\x08\x04:\t\x086"\x05headAB\x01;B\x03\n  :\xd9\x04\x08\x95\x02"\x05while:1\x08;"\x01(:\'\x08\x04:\x0b\x086"\x04curAB\x01 :\t\x084"\x02!=B\x01 :\x08\x086"\x04NULLB\x01)B\x01 :\x95\x04\x08<"\x06{\n    :L\x08\x02:A\x08\x01:\x16\x089:\x08\x086"\x04Node:\x05\x085"\x01*B\x01 :\x0b\x086"\x04curBB\x01 :\x15\x08\x03"\x02= :\r\x08\x04:\t\x086"\x05headBB\x01;B\x05\n    :\xee\x02\x08\x95\x02"\x05while:1\x08;"\x01(:\'\x08\x04:\x0b\x086"\x04curBB\x01 :\t\x084"\x02!=B\x01 :\x08\x086"\x04NULLB\x01)B\x01 :\xa7\x02\x08<"\x08{\n      :\xcb\x01\x08\x98\x02"\x02if:`\x08;"\x01(:Y\x08\x04:$\x086:\x08\x086"\x04curA:\t\x084"\x05-&gt;:\x08\x086"\x04dataB\x01 :\t\x084"\x02==B\x01 :!\x086:\x08\x086"\x04curB:\t\x084"\x05-&gt;:\x08\x086"\x04dataB\x01):W\x08C"\x01 :P\x08<"\n{\n        :@\x08\xaa\x02"\x07return :(\x08\x04:!\x086:\x08\x086"\x04curA:\t\x084"\x05-&gt;:\x08\x086"\x04dataB\x01;B\x08\n      }B\x07\n      :K\x08\x05:?\x08\x04:\x0b\x086"\x04curBB\x01 :\x08\x084"\x01=B\x01 :!\x086:\x08\x086"\x04curB:\t\x084"\x05-&gt;:\x08\x086"\x04nextB\x01;B\x06\n    }B\x05\n   \t:J\x08\x05:?\x08\x04:\x0b\x086"\x04curAB\x01 :\x08\x084"\x01=B\x01 :!\x086:\x08\x086"\x04curA:\t\x084"\x05-&gt;:\x08\x086"\x04nextB\x01;B\x05 \n  }B\x02\n}B\x02\n\n:\x8e\x02\x08\x06"\x86\x02/*\n  Insert Node at a given position in a linked list \n  The linked list will not be empty and position will always be valid\n  First element in the linked list is at position 0\n  Node is defined as \n  struct Node\n  {\n     int data;\n     struct Node *next;\n  }\n*/B\x01\n:\xa4\t\x08\x0c:\x16\x089:\x08\x086"\x04Node:\x05\x085"\x01*B\x01 :\r\x086"\tInsertNth:\x85\x01\x08d"\x01(:,\x08e:$\x08\x01:\x16\x089:\x0b\x086"\x04NodeB\x01 :\x05\x085"\x01*:\x08\x086"\x04headB\x02, :$\x08e:\x1c\x08\x01:\x0e\x089:\x07\x086"\x03intB\x01 :\x08\x086"\x04dataB\x02, :\'\x08e: \x08\x01:\x0e\x089:\x07\x086"\x03intB\x01 :\x0c\x086"\x08positionB\x01)B\x01\n:\xec\x07\x08<"\x04{\n  :%\x08\x06"\x1c// Complete this method onlyB\x03\n  :(\x08\x06"\x1f// Do not write main function. B\x03\n  :d\x08\x02:[\x08\x01:\x16\x089:\x08\x086"\x04Node:\x05\x085"\x01*B\x01 :\x0e\x086"\x07newNodeB\x01 :,\x08\x03"\x02= :$\x08\x04:\n\x084"\x03newB\x01 :\x14\x08\x07:\x08\x086"\x04Node:\x06\x08h"\x02()B\x01;B\x03\n  :N\x08\x05:B\x08\x04:\'\x086:\x0b\x086"\x07newNode:\t\x084"\x05-&gt;:\x08\x086"\x04dataB\x01 :\x08\x084"\x01=B\x01 :\x08\x086"\x04dataB\x01;B\x06\n  \n  :\xcd\x01\x08\x98\x02"\x02if:3\x08;"\x01(:,\x08\x04:\x0f\x086"\x08positionB\x01 :\t\x084"\x02==B\x01 :\t\x080"\x010R\x02\x08\x01B\x01):\x89\x01\x08C"\x01 :\x81\x01\x08<"\x06{\n    :M\x08\x05:B\x08\x04:\'\x086:\x0b\x086"\x07newNode:\t\x084"\x05-&gt;:\x08\x086"\x04nextB\x01 :\x08\x084"\x01=B\x01 :\x08\x086"\x04headB\x01;B\x05\n    :&\x08\xaa\x02"\x07return :\x12\x08\x04:\x0b\x086"\x07newNodeB\x01;B\x04\n  }B\x03\n  :H\x08\x02:?\x08\x01:\x16\x089:\x08\x086"\x04Node:\x05\x085"\x01*B\x01 :\n\x086"\x03curB\x01 :\x14\x08\x03"\x02= :\x0c\x08\x04:\x08\x086"\x04headB\x01;B\x03\n  :\xe9\x01\x08\x97\x02"\x03for:\x84\x01\x08\x08"\x01(:6\x08\x03:2\x08\x01:\x0e\x089:\x07\x086"\x03intB\x01 :\x05\x086"\x01i:\x14\x08\x03"\x01=:\r\x08\x04:\t\x080"\x011R\x02\x08\x01B\x01;:(\x08;:$\x08\x04:\x05\x086"\x01i:\x08\x084"\x04&lt;:\x0c\x086"\x08positionB\x01;:\x18\x08\t:\x11\x08\x04:\x06\x084"\x02++:\x05\x086"\x01iB\x01)B\x01 :S\x08<"\x06{\n    :G\x08\x05:=\x08\x04:\n\x086"\x03curB\x01 :\x08\x084"\x01=B\x01 : \x086:\x07\x086"\x03cur:\t\x084"\x05-&gt;:\x08\x086"\x04nextB\x01;B\x04\n  }B\x03\n  :c\x08\x05:Z\x08\x04:\'\x086:\x0b\x086"\x07newNode:\t\x084"\x05-&gt;:\x08\x086"\x04nextB\x01 :\x08\x084"\x01=B\x01 : \x086:\x07\x086"\x03cur:\t\x084"\x05-&gt;:\x08\x086"\x04nextB\x01;B\x03\n  :M\x08\x05:A\x08\x04:#\x086:\x07\x086"\x03cur:\t\x084"\x05-&gt;:\x08\x086"\x04nextB\x01 :\x08\x084"\x01=B\x01 :\x0b\x086"\x07newNodeB\x01;B\x06\n  \n  :!\x08\xaa\x02"\x07return :\x0f\x08\x04:\x08\x086"\x04headB\x01;B\x02\n}B\x02\n\n:\x94\x01\x08\x06"\x8c\x01/*\n  Merge two sorted lists A and B as one linked list\n  Node is defined as \n  struct Node\n  {\n     int data;\n     struct Node *next;\n  }\n*/B\x01\n:\xa7\x10\x08\x0c:\x16\x089:\x08\x086"\x04Node:\x05\x085"\x01*B\x01 :\x0e\x086"\nMergeLists:e\x08d"\x01(:-\x08e:%\x08\x01:\x16\x089:\x0b\x086"\x04NodeB\x01 :\x05\x085"\x01*:\t\x086"\x05headAB\x02, :,\x08e:%\x08\x01:\x16\x089:\x08\x086"\x04Node:\x05\x085"\x01*B\x01 :\t\x086"\x05headBB\x01)B\x01\n:\x8f\x0f\x08<"\x04{\n  :0\x08\x06"\'// This is a "method-only" submission. B\x03\n  :5\x08\x06")// You only need to complete this method B\x06\n  \n  :O\x08\x02:F\x08\x01:\x16\x089:\x08\x086"\x04Node:\x05\x085"\x01*B\x01 :\x11\x086"\nmergedHeadB\x01 :\x14\x08\x03"\x02= :\x0c\x08\x04:\x08\x086"\x04NULLB\x01;B\x03\n  :N\x08\x02:E\x08\x01:\x16\x089:\x08\x086"\x04Node:\x05\x085"\x01*B\x01 :\n\x086"\x03curB\x01 :\x1a\x08\x03"\x02= :\x12\x08\x04:\x0e\x086"\nmergedHeadB\x01;B\x03\n  :\xd1\x0c\x08\x95\x02"\x05while:\x1a\x08;"\x01(:\x10\x08\x04:\t\x080"\x011R\x02\x08\x01B\x01)B\x01 :\xa3\x0c\x08<"\x06{\n    :\xb3\x01\x08\x98\x02"\x02if:h\x08;"\x01(:a\x08\x04:\x0c\x086"\x05headAB\x01 :\t\x084"\x02==B\x01 :\x0b\x086"\x04NULLB\x01 :\x11\x084"\n&amp;&amp;B\x01 :\x0c\x086"\x05headBB\x01 :\t\x084"\x02==B\x01 :\x08\x086"\x04NULLB\x01):4\x08C"\x07\n      :\'\x08<:#\x08\xaa\x02"\x07return :\x15\x08\x04:\x0e\x086"\nmergedHeadB\x01;B\n\n    \n    :\xe0\n\x08\x98\x02"\x02if:\xcf\x01\x08;"\x01(:\xc7\x01\x08\x04:\x0c\x086"\x05headBB\x01 :\t\x084"\x02==B\x01 :\x0b\x086"\x04NULLB\x01 :\t\x084"\x02||B\x01 :\x0c\x086"\x05headAB\x01 :\t\x084"\x02!=B\x01 :\x0b\x086"\x04NULLB\x01 :\x11\x084"\n&amp;&amp;B\x01 :%\x086:\t\x086"\x05headA:\t\x084"\x05-&gt;:\x08\x086"\x04dataB\x01 :\x0b\x084"\x04&lt;B\x01 :"\x086:\t\x086"\x05headB:\t\x084"\x05-&gt;:\x08\x086"\x04dataB\x01):\xf6\x04\x08C"\x01 :\xe7\x04\x08<"\x08{\n      :\x89\x04\x08\x98\x02"\x02if:4\x08;"\x01(:-\x08\x04:\x11\x086"\nmergedHeadB\x01 :\t\x084"\x02==B\x01 :\x08\x086"\x04NULLB\x01):\x98\x01\x08C"\x01 :\x87\x01\x08<"\n{\n        :<\x08\x05:-\x08\x04:\x11\x086"\nmergedHeadB\x01 :\x08\x084"\x01=B\x01 :\t\x086"\x05headAB\x01;B\t\n        :9\x08\x05:+\x08\x04:\n\x086"\x03curB\x01 :\x08\x084"\x01=B\x01 :\x0e\x086"\nmergedHeadB\x01;B\x08\n      }B\x07\n      :\xa5\x02\x08D"\x05else :\x99\x02\x08<"\n{\n        :l\x08\x06"]//std::cout &lt;&lt; "adding " &lt;&lt; headA-&gt;data &lt;&lt; " from A" &lt;&lt; std::endl;B\t\n        :N\x08\x05:?\x08\x04:#\x086:\x07\x086"\x03cur:\t\x084"\x05-&gt;:\x08\x086"\x04nextB\x01 :\x08\x084"\x01=B\x01 :\t\x086"\x05headAB\x01;B\t\n        :K\x08\x05:=\x08\x04:\n\x086"\x03curB\x01 :\x08\x084"\x01=B\x01 : \x086:\x07\x086"\x03cur:\t\x084"\x05-&gt;:\x08\x086"\x04nextB\x01;B\x08\n      }B\x07\n      :M\x08\x05:A\x08\x04:\x0c\x086"\x05headAB\x01 :\x08\x084"\x01=B\x01 :"\x086:\t\x086"\x05headA:\t\x084"\x05-&gt;:\x08\x086"\x04nextB\x01;B\x06\n    }B\x05\n    :\x85\x04\x08D"\x05else :\xf9\x03\x08<"\x08{\n      :\x9b\x03\x08\x98\x02"\x02if:4\x08;"\x01(:-\x08\x04:\x11\x086"\nmergedHeadB\x01 :\t\x084"\x02==B\x01 :\x08\x086"\x04NULLB\x01):\x98\x01\x08C"\x01 :\x87\x01\x08<"\n{\n        :<\x08\x05:-\x08\x04:\x11\x086"\nmergedHeadB\x01 :\x08\x084"\x01=B\x01 :\t\x086"\x05headBB\x01;B\t\n        :9\x08\x05:+\x08\x04:\n\x086"\x03curB\x01 :\x08\x084"\x01=B\x01 :\x0e\x086"\nmergedHeadB\x01;B\x08\n      }B\x07\n      :\xb7\x01\x08D"\x05else :\xab\x01\x08<"\n{\n        :N\x08\x05:?\x08\x04:#\x086:\x07\x086"\x03cur:\t\x084"\x05-&gt;:\x08\x086"\x04nextB\x01 :\x08\x084"\x01=B\x01 :\t\x086"\x05headBB\x01;B\t\n        :K\x08\x05:=\x08\x04:\n\x086"\x03curB\x01 :\x08\x084"\x01=B\x01 : \x086:\x07\x086"\x03cur:\t\x084"\x05-&gt;:\x08\x086"\x04nextB\x01;B\x08\n      }B\x07\n      :M\x08\x05:A\x08\x04:\x0c\x086"\x05headBB\x01 :\x08\x084"\x01=B\x01 :"\x086:\t\x086"\x05headB:\t\x084"\x05-&gt;:\x08\x086"\x04nextB\x01;B\x06\n    }B\x04\n  }B\x03\n  :\'\x08\xaa\x02"\x07return :\x15\x08\x04:\x0e\x086"\nmergedHeadB\x01;B\x02\n}B\x02\n\n:\x9b\x01\x08\x06"\x93\x01/*\n  Detect loop in a linked list \n  List could be empty also\n  Node is defined as \n  struct Node\n  {\n     int data;\n     struct Node *next;\n  }\n*/B\x01\n:\xd7\x06\x08\x0c:\x0e\x089:\x07\x086"\x03intB\x01 :\x0c\x086"\x08HasCycle:5\x08d"\x01(:+\x08e:$\x08\x01:\x16\x089:\x08\x086"\x04Node:\x05\x085"\x01*B\x01 :\x08\x086"\x04headB\x01)B\x01\n:\xf9\x05\x08<"\x05{\n   :#\x08\x06"\x19// Complete this functionB\x04\n   :(\x08\x06"\x1f// Do not write the main methodB\x03\n  :L\x08\x02:C\x08\x01:\x16\x089:\x08\x086"\x04Node:\x05\x085"\x01*B\x01 :\x0e\x086"\x07stepperB\x01 :\x14\x08\x03"\x02= :\x0c\x08\x04:\x08\x086"\x04headB\x01;B\x03\n  :R\x08\x02:F\x08\x01:\x16\x089:\x08\x086"\x04Node:\x05\x085"\x01*B\x01 :\x11\x086"\ntwoStepperB\x01 :\x14\x08\x03"\x02= :\x0c\x08\x04:\x08\x086"\x04headB\x01;B\x06\n  \n  :\xd8\x03\x08\x95\x02"\x05while:\x81\x01\x08;"\x01(:w\x08\x04:\x0e\x086"\x07stepperB\x01 :\x11\x084"\n&amp;&amp;B\x01 :\x11\x086"\ntwoStepperB\x01 :\x11\x084"\n&amp;&amp;B\x01 :\'\x086:\x0e\x086"\ntwoStepper:\t\x084"\x05-&gt;:\x08\x086"\x04nextB\x01)B\x01 :\xc2\x02\x08<"\x06{\n    :P\x08\x05:E\x08\x04:\x0e\x086"\x07stepperB\x01 :\x08\x084"\x01=B\x01 :$\x086:\x0b\x086"\x07stepper:\t\x084"\x05-&gt;:\x08\x086"\x04nextB\x01;B\x05\n    :k\x08\x05:`\x08\x04:\x11\x086"\ntwoStepperB\x01 :\x08\x084"\x01=B\x01 :<\x086:\x0e\x086"\ntwoStepper:\t\x084"\x05-&gt;:\x08\x086"\x04next:\t\x084"\x05-&gt;:\x08\x086"\x04nextB\x01;B\x05\n    :w\x08\x98\x02"\x02if:7\x08;"\x01(:0\x08\x04:\x0e\x086"\x07stepperB\x01 :\t\x084"\x02==B\x01 :\x0e\x086"\ntwoStepperB\x01):/\x08C"\x07\n      :"\x08<:\x1e\x08\xaa\x02"\x07return :\x10\x08\x04:\t\x080"\x011R\x02\x08\x01B\x01;B\x04\n  }B\x03\n  :"\x08\xaa\x02"\x07return :\x10\x08\x04:\t\x080"\x010R\x02\x08\x01B\x01;B\x02\n}B\x02\n\n:\xaa\x01\x08\x06"\xa2\x01/*\n   Reverse a doubly linked list, input list may also be empty\n   Node is defined as\n   struct Node\n   {\n     int data;\n     Node *next;\n     Node *prev\n   }\n*/B\x01\n:\xaa\n\x08\x0c:\x16\x089:\x08\x086"\x04Node:\x05\x085"\x01*B\x01 :\x0b\x086"\x07Reverse:5\x08d"\x01(:+\x08e:$\x08\x01:\x16\x089:\x08\x086"\x04Node:\x05\x085"\x01*B\x01 :\x08\x086"\x04headB\x01)B\x01\n:\xc5\t\x08<"\x06{\n    :$\x08\x06"\x19// Complete this functionB\x05\n    :+\x08\x06"!// Do not write the main method. B\x04\n  \t:Y\x08\x98\x02"\x02if:\x1d\x08;"\x01(:\x16\x08\x04:\x05\x084"\x01!:\x08\x086"\x04headB\x01):(\x08C"\x01 :!\x08<:\x1d\x08\xaa\x02"\x07return :\x0f\x08\x04:\x08\x086"\x04headB\x01;B\x07\n  \n \t\t:N\x08\x02:@\x08\x01:\x16\x089:\x0b\x086"\x04NodeB\x01 :\x05\x085"\x01*:\x0b\x086"\x04tempB\x01 :\x14\x08\x03"\x02= :\x0c\x08\x04:\x08\x086"\x04NULLB\x01;B\x08  \n     :V\x08\x02:C\x08\x01:\x16\x089:\x0b\x086"\x04NodeB\x01 :\x05\x085"\x01*:\x0e\x086"\x07currentB\x01 :\x14\x08\x03"\x02= :\x0c\x08\x04:\x08\x086"\x04headB\x01;B\r\n      \n     :P\x08\x06"D/* swap next and prev for all nodes of \n       doubly linked list */B\x06\n     :\xe0\x03\x08\x95\x02"\x06while ::\x08;"\x01(:+\x08\x04:\x0e\x086"\x07currentB\x01 :\n\x084"\x02!=B\x02  :\x08\x086"\x04NULLB\x01)B\x06\n     :\x81\x03\x08<"\t{\n       :P\x08\x05:B\x08\x04:\x0b\x086"\x04tempB\x01 :\x08\x084"\x01=B\x01 :$\x086:\x0b\x086"\x07current:\t\x084"\x05-&gt;:\x08\x086"\x04prevB\x01;B\x08\n       :l\x08\x05:^\x08\x04:\'\x086:\x0b\x086"\x07current:\t\x084"\x05-&gt;:\x08\x086"\x04prevB\x01 :\x08\x084"\x01=B\x01 :$\x086:\x0b\x086"\x07current:\t\x084"\x05-&gt;:\x08\x086"\x04nextB\x01;B\x08\n       :^\x08\x05:B\x08\x04:\'\x086:\x0b\x086"\x07current:\t\x084"\x05-&gt;:\x08\x086"\x04nextB\x01 :\x08\x084"\x01=B\x01 :\x08\x086"\x04tempB\x01;B\x16              \n       :R\x08\x05:E\x08\x04:\x0e\x086"\x07currentB\x01 :\x08\x084"\x01=B\x01 :$\x086:\x0b\x086"\x07current:\t\x084"\x05-&gt;:\x08\x086"\x04prevB\x01;B\x07\n     }B\x13      \n      \n     :p\x08\x06"d/* Before changing head, check for the cases like empty \n        list and list with only one node */B\x06\n     :\x98\x01\x08\x98\x02"\x02if:/\x08;"\x01(:(\x08\x04:\x0b\x086"\x04tempB\x01 :\t\x084"\x02!=B\x01 :\x08\x086"\x04NULLB\x02 ):V\x08C"\t\n        :G\x08<:C\x08\x05:?\x08\x04:\x0b\x086"\x04headB\x01 :\x08\x084"\x01=B\x01 :!\x086:\x08\x086"\x04temp:\t\x084"\x05-&gt;:\x08\x086"\x04prevB\x01;B\x06\n  \n  :!\x08\xaa\x02"\x07return :\x0f\x08\x04:\x08\x086"\x04headB\x01;B\x02\n}B\x02\n\n:\xc9\x01\x08\x06"\xc1\x01/*\n  Reverse a linked list and return pointer to the head\n  The input list will have at least one element  \n  Node is defined as \n  struct Node\n  {\n     int data;\n     struct Node *next;\n  }\n*/B\x01\n:\xdc\x05\x08\x0c:\x16\x089:\x08\x086"\x04Node:\x05\x085"\x01*B\x01 :\x0b\x086"\x07Reverse:5\x08d"\x01(:+\x08e:$\x08\x01:\x16\x089:\x0b\x086"\x04NodeB\x01 :\x05\x085"\x01*:\x08\x086"\x04headB\x01)B\x01\n:\xf7\x04\x08<"\x05{\n\n  :m\x08\x02:+\x08\x01:\x16\x089:\x0b\x086"\x04NodeB\x01 :\x05\x085"\x01*:\x0b\x086"\x07currentB\x02, :\x05\x085"\x01*:\x14\x08\x01:\x02\x089:\x08\x086"\x04nextB\x02, :\x05\x085"\x01*:\x13\x08\x01:\x02\x089:\x08\x086"\x04prevB\x01;B\x03\n  :2\x08\x05:)\x08\x04:\x0e\x086"\x07currentB\x01 :\x08\x084"\x01=B\x01 :\x08\x086"\x04headB\x01;B\x03\n  :/\x08\x05:&\x08\x04:\x0b\x086"\x04prevB\x01 :\x08\x084"\x01=B\x01 :\x08\x086"\x04NULLB\x01;B\x03\n  :\xc3\x02\x08\x95\x02"\x05while:\x1c\x08;"\x01(:\x12\x08\x04:\x0b\x086"\x07currentB\x01)B\x01 :\x93\x02\x08<"\x06{\n    :M\x08\x05:B\x08\x04:\x0b\x086"\x04nextB\x01 :\x08\x084"\x01=B\x01 :$\x086:\x0b\x086"\x07current:\t\x084"\x05-&gt;:\x08\x086"\x04nextB\x01;B\x05\n    :M\x08\x05:B\x08\x04:\'\x086:\x0b\x086"\x07current:\t\x084"\x05-&gt;:\x08\x086"\x04nextB\x01 :\x08\x084"\x01=B\x01 :\x08\x086"\x04prevB\x01;B\x05\n    :4\x08\x05:)\x08\x04:\x0b\x086"\x04prevB\x01 :\x08\x084"\x01=B\x01 :\x0b\x086"\x07currentB\x01;B\x05\n    :3\x08\x05:)\x08\x04:\x0e\x086"\x07currentB\x01 :\x08\x084"\x01=B\x01 :\x08\x086"\x04nextB\x01;B\x04\n  }B\x03\n  :/\x08\x05:&\x08\x04:\x0b\x086"\x04headB\x01 :\x08\x084"\x01=B\x01 :\x08\x086"\x04prevB\x01;B\x03\n  :!\x08\xaa\x02"\x07return :\x0f\x08\x04:\x08\x086"\x04headB\x01;B\x02\n}B\x02\n\n:\xda\x01\x08\x06"\xd2\x01/*\n  Print elements of a linked list in reverse order as standard output\n  head pointer could be NULL as well for empty list\n  Node is defined as \n  struct Node\n  {\n     int data;\n     struct Node *next;\n  }\n*/B\x01\n:\xac\x04\x08\x0c:\x0f\x089:\x08\x086"\x04voidB\x01 :\x10\x086"\x0cReversePrint:5\x08d"\x01(:+\x08e:$\x08\x01:\x16\x089:\x0b\x086"\x04NodeB\x01 :\x05\x085"\x01*:\x08\x086"\x04headB\x01)B\x01\n:\xc9\x03\x08<"\x04{\n  :0\x08\x06"\'// This is a "method-only" submission. B\x03\n  :3\x08\x06"*// You only need to complete this method. B\x03\n  :c\x08\x98\x02"\x02if:.\x08;"\x01(:\'\x08\x04:\x0b\x086"\x04headB\x01 :\t\x084"\x02==B\x01 :\x08\x086"\x04NULLB\x01):%\x08C"\x01 :\x1e\x08<"\x06{\n    :\x12\x08\xaa\x02"\x07return;B\x04\n  }B\x03\n  :Y\x08\x05:P\x08\x04:I\x08\x07:\x10\x086"\x0cReversePrint:3\x08h"\x01(:,\x08i:%\x08\x04:!\x086:\x08\x086"\x04head:\t\x084"\x05-&gt;:\x08\x086"\x04nextB\x01)B\x01;B\x03\n  :\x97\x01\x08\x05:\x8e\x01\x08\x04: \x086:\x07\x086"\x03std:\x06\x084"\x02:::\x08\x086"\x04coutB\x01 :\x0f\x084"\x08&lt;&lt;B\x01 :$\x086:\x08\x086"\x04head:\t\x084"\x05-&gt;:\x08\x086"\x04dataB\x01 :\x0f\x084"\x08&lt;&lt;B\x01 :\x1d\x086:\x07\x086"\x03std:\x06\x084"\x02:::\x08\x086"\x04endlB\x01;B\x02\n}B\x02\n\n:\xc8\x01\x08\x06"\xc0\x01/*\n  Print elements of a linked list on console \n  head pointer input could be NULL as well for empty list\n  Node is defined as \n  struct Node\n  {\n     int data;\n     struct Node *next;\n  }\n*/B\x01\n:\xec\x03\x08\x0c:\x0f\x089:\x08\x086"\x04voidB\x01 :\t\x086"\x05Print:5\x08d"\x01(:+\x08e:$\x08\x01:\x16\x089:\x0b\x086"\x04NodeB\x01 :\x05\x085"\x01*:\x08\x086"\x04headB\x01)B\x01\n:\x90\x03\x08<"\x04{\n  :0\x08\x06"\'// This is a "method-only" submission. B\x03\n  :3\x08\x06"*// You only need to complete this method. B\x03\n  :\x9e\x02\x08\x95\x02"\x05while:\x19\x08;"\x01(:\x0f\x08\x04:\x08\x086"\x04headB\x01)B\x01 :\xf2\x01\x08<"\x06{\n    :\x9a\x01\x08\x05:\x8e\x01\x08\x04: \x086:\x07\x086"\x03std:\x06\x084"\x02:::\x08\x086"\x04coutB\x01 :\x0f\x084"\x08&lt;&lt;B\x01 :$\x086:\x08\x086"\x04head:\t\x084"\x05-&gt;:\x08\x086"\x04dataB\x01 :\x0f\x084"\x08&lt;&lt;B\x01 :\x1d\x086:\x07\x086"\x03std:\x06\x084"\x02:::\x08\x086"\x04endlB\x01;B\x05\n    :I\x08\x05:?\x08\x04:\x0b\x086"\x04headB\x01 :\x08\x084"\x01=B\x01 :!\x086:\x08\x086"\x04head:\t\x084"\x05-&gt;:\x08\x086"\x04nextB\x01;B\x04\n  }B\x02\n}B\x02\n\n:\xd0\x01\x08\x06"\xc8\x01/*\n    Insert Node in a doubly sorted linked list \n    After each insertion, the list should be sorted\n   Node is defined as\n   struct Node\n   {\n     int data;\n     Node *next;\n     Node *prev\n   }\n*/B\x01\n:\xd4\x14\x08\x0c:\x16\x089:\x08\x086"\x04Node:\x05\x085"\x01*B\x01 :\x10\x086"\x0cSortedInsert:Z\x08d"\x01(:+\x08e:$\x08\x01:\x16\x089:\x0b\x086"\x04NodeB\x01 :\x05\x085"\x01*:\x08\x086"\x04headB\x01,:#\x08e:\x1c\x08\x01:\x0e\x089:\x07\x086"\x03intB\x01 :\x08\x086"\x04dataB\x01)B\x01\n:\xc9\x13\x08<"\x06{\n    :#\x08\x06"\x19// Complete this functionB\x04\n   :,\x08\x06" // Do not write the main method.B\x06\n  \n  :$\x08\x06"\x19// Complete this functionB\x05\n    :+\x08\x06" // Do not write the main method.B\x05\n    :f\x08\x02:[\x08\x01:\x19\x089:\x0b\x086"\x04NodeB\x01 :\x05\x085"\x01*B\x01 :\x0b\x086"\x04tempB\x01 :,\x08\x03"\x02= :$\x08\x04:\n\x084"\x03newB\x01 :\x14\x08\x07:\x08\x086"\x04Node:\x06\x08h"\x02()B\x01;B\x05\n    :J\x08\x05:?\x08\x04:$\x086:\x08\x086"\x04temp:\t\x084"\x05-&gt;:\x08\x086"\x04dataB\x01 :\x08\x084"\x01=B\x01 :\x08\x086"\x04dataB\x01;B\x05\n    :J\x08\x05:?\x08\x04:$\x086:\x08\x086"\x04temp:\t\x084"\x05-&gt;:\x08\x086"\x04nextB\x01 :\x08\x084"\x01=B\x01 :\x08\x086"\x04NULLB\x01;B\x05\n    :H\x08\x05:?\x08\x04:$\x086:\x08\x086"\x04temp:\t\x084"\x05-&gt;:\x08\x086"\x04prevB\x01 :\x08\x084"\x01=B\x01 :\x08\x086"\x04NULLB\x01;B\x03\n  :"\x08\x06"\x17//head null return tempB\x05\n    :\xb4\x01\x08\x98\x02"\x03if :.\x08;"\x01(:\'\x08\x04:\x0b\x086"\x04headB\x01 :\t\x084"\x02==B\x01 :\x08\x086"\x04NULLB\x01):w\x08C"\x05\n    :l\x08<"\n{\n        :5\x08\x05:&\x08\x04:\x0b\x086"\x04headB\x01 :\x08\x084"\x01=B\x01 :\x08\x086"\x04tempB\x01;B\t\n        :%\x08\xaa\x02"\x07return :\x0f\x08\x04:\x08\x086"\x04headB\x01;B\x06\n    }B\x01\n:\x1b\x08\x06"\x10//temp &lt; headB\x05\n    :\x90\x03\x08\x98\x02"\x03if :c\x08;"\x01(:\\\x08\x04:$\x086:\x08\x086"\x04temp:\t\x084"\x05-&gt;:\x08\x086"\x04dataB\x01 :\x0c\x084"\x05&lt;=B\x01 :!\x086:\x08\x086"\x04head:\t\x084"\x05-&gt;:\x08\x086"\x04dataB\x01):\x98\x02\x08C"\x05\n    :\x8c\x02\x08<"\n{\n        :N\x08\x05:?\x08\x04:$\x086:\x08\x086"\x04temp:\t\x084"\x05-&gt;:\x08\x086"\x04nextB\x01 :\x08\x084"\x01=B\x01 :\x08\x086"\x04headB\x01;B\t\n        :N\x08\x05:?\x08\x04:$\x086:\x08\x086"\x04head:\t\x084"\x05-&gt;:\x08\x086"\x04prevB\x01 :\x08\x084"\x01=B\x01 :\x08\x086"\x04tempB\x01;B\t\n        :5\x08\x05:&\x08\x04:\x0b\x086"\x04headB\x01 :\x08\x084"\x01=B\x01 :\x08\x086"\x04tempB\x01;B\t\n        :%\x08\xaa\x02"\x07return :\x0f\x08\x04:\x08\x086"\x04headB\x01;B\x06\n    }B\x06\n\n    :I\x08\x02:@\x08\x01:\x16\x089:\x0b\x086"\x04NodeB\x01 :\x05\x085"\x01*:\x0b\x086"\x04currB\x01 :\x14\x08\x03"\x02= :\x0c\x08\x04:\x08\x086"\x04headB\x01;B\x03\n  :\x1d\x08\x06"\x12//iterate to node B\x05\n    :K\x08\x06"@// N &lt;-&gt; 1 &lt;-&gt; 2 &lt;-&gt; 4 &lt;-&gt; 5 &lt;-&gt; NB\x05\n    :\xf8\x02\x08\x95\x02"\x06while :H\x08;"\x01(::\x08\x04:!\x086:\x08\x086"\x04curr:\t\x084"\x05-&gt;:\x08\x086"\x04next:\x06\x084"\x02!=:\x08\x086"\x04NULLB\x01)B\x05\n    :\x9a\x02\x08<"\x11{\n      \n        :\xb5\x01\x08\x98\x02"\x03if :c\x08;"\x01(:\\\x08\x04:$\x086:\x08\x086"\x04temp:\t\x084"\x05-&gt;:\x08\x086"\x04dataB\x01 :\x0c\x084"\x05&lt;=B\x01 :!\x086:\x08\x086"\x04curr:\t\x084"\x05-&gt;:\x08\x086"\x04dataB\x01)::\x08C"\t\n        :+\x08<"\x0e{\n            :\x17\x08\x93\x02"\x06break;B\n\n        }B\n\n\n        :K\x08\x05:?\x08\x04:\x0b\x086"\x04currB\x01 :\x08\x084"\x01=B\x01 :!\x086:\x08\x086"\x04curr:\t\x084"\x05-&gt;:\x08\x086"\x04nextB\x01;B\x06\n    }B\x04\n\n  :\x19\x08\x06"\x0f//insert beforeB\x04\n  \t:\x9d\x04\x08\x98\x02"\x03if :c\x08;"\x01(:\\\x08\x04:$\x086:\x08\x086"\x04temp:\t\x084"\x05-&gt;:\x08\x086"\x04dataB\x01 :\x0c\x084"\x05&lt;=B\x01 :!\x086:\x08\x086"\x04curr:\t\x084"\x05-&gt;:\x08\x086"\x04dataB\x01):\xa8\x03\x08C"\x05\n    :\x9c\x03\x08<"\x0b{   \n      :a\x08\x05:T\x08\x04:9\x086:\x08\x086"\x04curr:\t\x084"\x05-&gt;:\x08\x086"\x04prev:\t\x084"\x05-&gt;:\x08\x086"\x04nextB\x01 :\x08\x084"\x01=B\x01 :\x08\x086"\x04tempB\x01;B\x07\n      :e\x08\x05:X\x08\x04:$\x086:\x08\x086"\x04temp:\t\x084"\x05-&gt;:\x08\x086"\x04prevB\x01 :\x08\x084"\x01=B\x01 :!\x086:\x08\x086"\x04curr:\t\x084"\x05-&gt;:\x08\x086"\x04prevB\x01;B\x07\n      :L\x08\x05:?\x08\x04:$\x086:\x08\x086"\x04temp:\t\x084"\x05-&gt;:\x08\x086"\x04nextB\x01 :\x08\x084"\x01=B\x01 :\x08\x086"\x04currB\x01;B\x07\n      :L\x08\x05:?\x08\x04:$\x086:\x08\x086"\x04curr:\t\x084"\x05-&gt;:\x08\x086"\x04prevB\x01 :\x08\x084"\x01=B\x01 :\x08\x086"\x04tempB\x01;B\x07\n      :%\x08\xaa\x02"\x07return :\x0f\x08\x04:\x08\x086"\x04headB\x01;B\x06\n    }B\x03\n  :\x1a\x08\x06"\x0f//insert at endB\x05\n    :J\x08\x05:?\x08\x04:$\x086:\x08\x086"\x04curr:\t\x084"\x05-&gt;:\x08\x086"\x04nextB\x01 :\x08\x084"\x01=B\x01 :\x08\x086"\x04tempB\x01;B\x05\n    :J\x08\x05:?\x08\x04:$\x086:\x08\x086"\x04temp:\t\x084"\x05-&gt;:\x08\x086"\x04prevB\x01 :\x08\x084"\x01=B\x01 :\x08\x086"\x04currB\x01;B\x05\n    :!\x08\xaa\x02"\x07return :\x0f\x08\x04:\x08\x086"\x04headB\x01;B\x02\n}J"\n\x17linkedlist/cpp/1071.cpp\x12\x050.9.5\x18\x03'
p4
sb.