cfast_pb2
Data
p0
(tRp1
(dp2
S'serialized'
p3
S'\n\xce=\x08\x00:0\x08\xab\x02"\x01#:\x0f\x08\x96\x01"\x07includeB\x01 :\x13\x08\xae\x01"\x0e"linkedlist.h"B\x02\n\n:\x14\x08\x06"\r//ConstructorB\x01\n:_\x08\x06"X// Intiiliases the linked list by setting the head value as -1 and head-&gt;next as NULLB\x01\n:\xa7\x02\x08\x0e:*\x086:\x0e\x086"\nlinkedlist:\x06\x084"\x02:::\x0e\x086"\nlinkedlist:\t\x08d"\x02()B\x01\n:\xe7\x01\x08<"\x06{\n    :=\x08\x05:2\x08\x04:\x0b\x086"\x04headB\x01 :\x08\x084"\x01=B\x01 :\n\x084"\x03newB\x01 :\x08\x086"\x04nodeB\x01;B\x05\n    :S\x08\x05:H\x08\x04:%\x086:\x08\x086"\x04head:\t\x084"\x05-&gt;:\t\x086"\x05indexB\x01 :\x08\x084"\x01=B\x01 :\x05\x084"\x01-:\t\x080"\x011R\x02\x08\x01B\x01;B\x05\n    :G\x08\x05:?\x08\x04:$\x086:\x08\x086"\x04head:\t\x084"\x05-&gt;:\x08\x086"\x04nextB\x01 :\x08\x084"\x01=B\x01 :\x08\x086"\x04NULLB\x01;B\x02\n}B\x02\n\n:x\x08\x06"q// Used to search for the pattern string in the given linked list, and outputs the index at which pattern matchesB\x01\n:"\x08\x06"\x1b// Also outputs to the fileB\x01\n:\x16\x08\x06"\x0f// Meant for Q2B\x01\n:\xc8\x18\x08\x0c:\x0e\x089:\x07\x086"\x03intB\x01 :(\x086:\x0e\x086"\nlinkedlist:\x06\x084"\x02:::\x0c\x086"\x08searchin:\xae\x01\x08d"\x01(:$\x08e:\x1c\x08\x01:\x11\x089:\n\x086"\x06stringB\x01 :\x05\x086"\x01PB\x02, :%\x08e:\x1d\x08\x01:\x11\x089:\n\x086"\x06stringB\x01 :\x06\x086"\x02stB\x02, :!\x08e:\x19\x08\x01:\x0e\x089:\x07\x086"\x03intB\x01 :\x05\x086"\x01mB\x02, :4\x08e:-\x08\x01:\x1e\x089:\x0c\x086"\x08ofstream:\t\x085"\x05&amp;B\x01 :\t\x086"\x05fout2B\x01)B\x01\n:\xd4\x16\x08<"\x06{\n    :\x1f\x08\x06"\x14// Number of matchesB\x05\n    :H\x08\x02:<\x08\x01:\x0e\x089:\x07\x086"\x03intB\x01 :\x0e\x086"\x07matchesB\x01 :\x15\x08\x03"\x02= :\r\x08\x04:\t\x080"\x010R\x02\x08\x01B\x01;B\x06\n\n    :<\x08\x06"1// The linked list is empty, (head-&gt;index =-1)B\x05\n    :5\x08\x06"*// Hash code doesn\'t match with any stringB\x05\n    :\xba\x0f\x08\x98\x02"\x03if :P\x08;"\x01(:I\x08\x04:%\x086:\x08\x086"\x04head:\t\x084"\x05-&gt;:\t\x086"\x05indexB\x01 :\t\x084"\x02==B\x01 :\x05\x084"\x01-:\t\x080"\x011R\x02\x08\x01B\x01):G\x08C"\x01 :8\x08<"\n{\n        :(\x08\xaa\x02"\x07return :\x12\x08\x04:\x0b\x086"\x07matchesB\x01;B\x06\n    }B\x06\n\n    :&\x08\x06"\x1b// Linked list is not emptyB\x05\n    :\x1f\x08\x06"\x14// Hash code matchesB\x05\n    :\xc4\r\x08D"\x05else :\xb8\r\x08<"\n{\n        :B\x08\x06"3// Used to extract the substring from the string stB\t\n        :.\x08\x02:\x1f\x08\x01:\x11\x089:\n\x086"\x06stringB\x01 :\x05\x086"\x01xB\x01;B\t\n        :2\x08\x06"#// Used to traverse the linked listB\t\n        :M\x08\x02:=\x08\x01:\x16\x089:\x08\x086"\x04node:\x05\x085"\x01*B\x01 :\x08\x086"\x01tB\x01 :\x14\x08\x03"\x02= :\x0c\x08\x04:\x08\x086"\x04headB\x01;B\n\n\n        :7\x08\x06"(// While you don\'t reach the end of fileB\t\n        :\xf7\n\x08\x95\x02"\x06while :.\x08;"\x01(:$\x08\x04:\x08\x086"\x01tB\x01 :\t\x084"\x02!=B\x01 :\x08\x086"\x04NULLB\x01)B\x01 :\xb1\n\x08<"\x0e{\n            :]\x08\x06"J// Extract the substring at index t-&gt;index till m length from string stB\r\n            :\x96\x01\x08\x05:\x82\x01\x08\x04:\x08\x086"\x01xB\x01 :\x08\x084"\x01=B\x01 :g\x08\x07:\x1d\x086:\x06\x086"\x02st:\x05\x084"\x01.:\n\x086"\x06substr:D\x08h"\x01(:+\x08i:#\x08\x04:\x1f\x086:\x05\x086"\x01t:\t\x084"\x05-&gt;:\t\x086"\x05indexB\x02, :\x10\x08i:\t\x08\x04:\x05\x086"\x01mB\x01)B\x01;B\r\n            :6\x08\x06"#// If the two string are same, thenB\r\n            ::\x08\x06"\'// hash code matches and string matchesB\r\n            :\xbe\x06\x08\x98\x02"\x03if :s\x08;"\x01(:l\x08\x04:O\x08\x07:\t\x086"\x05scomp:=\x08h"\x01(:\x11\x08i:\t\x08\x04:\x05\x086"\x01PB\x02, :\x11\x08i:\t\x08\x04:\x05\x086"\x01xB\x02, :\x10\x08i:\t\x08\x04:\x05\x086"\x01mB\x01)B\x01 :\t\x084"\x02==B\x01 :\t\x080"\x010R\x02\x08\x01B\x01):\xaf\x05\x08C"\x01 :\xa7\x05\x08<"\x12{\n                :C\x08\x06",// Output standard output and to file outputB\x11\n                :\xed\x01\x08\x05:\xd5\x01\x08\x04:\x0b\x086"\x04coutB\x01 :\x0f\x084"\x08&lt;&lt;B\x01 :\x15\x080"\n"Pattern "B\x01 R\x02\x08\x03:\x0f\x084"\x08&lt;&lt;B\x01 :\x08\x086"\x01PB\x01 :\x0f\x084"\x08&lt;&lt;B\x01 :\x1d\x080"\x12" found at index "B\x01 R\x02\x08\x03:\x0f\x084"\x08&lt;&lt;B\x01 :"\x086:\x05\x086"\x01t:\t\x084"\x05-&gt;:\t\x086"\x05indexB\x01 :\x0f\x084"\x08&lt;&lt;B\x01 :\x08\x086"\x04endlB\x01;B\x11\n                :\xee\x01\x08\x05:\xd6\x01\x08\x04:\x0c\x086"\x05fout2B\x01 :\x0f\x084"\x08&lt;&lt;B\x01 :\x15\x080"\n"Pattern "B\x01 R\x02\x08\x03:\x0f\x084"\x08&lt;&lt;B\x01 :\x08\x086"\x01PB\x01 :\x0f\x084"\x08&lt;&lt;B\x01 :\x1d\x080"\x12" found at index "B\x01 R\x02\x08\x03:\x0f\x084"\x08&lt;&lt;B\x01 :"\x086:\x05\x086"\x01t:\t\x084"\x05-&gt;:\t\x086"\x05indexB\x01 :\x0f\x084"\x08&lt;&lt;B\x01 :\x08\x086"\x04endlB\x01;B\x11\n                :9\x08\x06""// Increment the number of matchesB\x11\n                :.\x08\x05:\x1a\x08\x04:\x0b\x086"\x07matches:\x06\x084"\x02++B\x01;B\x0e\n            }B\r\n            :%\x08\x06"\x12// Go to next nodeB\r\n            :I\x08\x05:9\x08\x04:\x08\x086"\x01tB\x01 :\x08\x084"\x01=B\x01 :\x1e\x086:\x05\x086"\x01t:\t\x084"\x05-&gt;:\x08\x086"\x04nextB\x01;B\n\n        }B\x06\n    }B\x05\n    :c\x08\x06"X// If there are in any matches, then output the no of matches for that particular stringB\x05\n    :\x9f\x04\x08\x98\x02"\x03if :4\x08;"\x01(:-\x08\x04:\x0e\x086"\x07matchesB\x01 :\x0b\x084"\x04&gt;B\x01 :\t\x080"\x010R\x02\x08\x01B\x01):\xd6\x03\x08C"\x01 :\xce\x03\x08<"\n{\n        :\xde\x01\x08\x05:\xce\x01\x08\x04:\x0b\x086"\x04coutB\x01 :\x0f\x084"\x08&lt;&lt;B\x01 :\x17\x080"\x0c"There are "B\x01 R\x02\x08\x03:\x0f\x084"\x08&lt;&lt;B\x01 :\x0e\x086"\x07matchesB\x01 :\x0f\x084"\x08&lt;&lt;B\x01 :"\x080"\x17" matches for pattern "B\x01 R\x02\x08\x03:\x0f\x084"\x08&lt;&lt;B\x01 :\x08\x086"\x01PB\x01 :\x0f\x084"\x08&lt;&lt;B\x01 :\x0e\x080"\x06"\\n\\n"R\x02\x08\x03B\x01;B\t\n        :\xdc\x01\x08\x05:\xcf\x01\x08\x04:\x0c\x086"\x05fout2B\x01 :\x0f\x084"\x08&lt;&lt;B\x01 :\x17\x080"\x0c"There are "B\x01 R\x02\x08\x03:\x0f\x084"\x08&lt;&lt;B\x01 :\x0e\x086"\x07matchesB\x01 :\x0f\x084"\x08&lt;&lt;B\x01 :"\x080"\x17" matches for pattern "B\x01 R\x02\x08\x03:\x0f\x084"\x08&lt;&lt;B\x01 :\x08\x086"\x01PB\x01 :\x0f\x084"\x08&lt;&lt;B\x01 :\x0e\x080"\x06"\\n\\n"R\x02\x08\x03B\x01;B\x06\n    }B\x06\n\n    :$\x08\xaa\x02"\x07return :\x12\x08\x04:\x0b\x086"\x07matchesB\x01;B\x02\n}B\x02\n\n:H\x08\x06"A// Used to search for the pattern string in the given linked listB\x01\n:R\x08\x06"K// Then calculates the comparisons and false positives in the form of tupleB\x01\n:\xd1\x16\x08\x0c:\x17\x089:\t\x086"\x05tuple:\x05\x085"\x01*B\x01 :&\x086:\x0e\x086"\nlinkedlist:\x06\x084"\x02:::\n\x086"\x06search:w\x08d"\x01(:$\x08e:\x1c\x08\x01:\x11\x089:\n\x086"\x06stringB\x01 :\x05\x086"\x01PB\x02, :%\x08e:\x1d\x08\x01:\x11\x089:\n\x086"\x06stringB\x01 :\x06\x086"\x02stB\x02, : \x08e:\x19\x08\x01:\x0e\x089:\x07\x086"\x03intB\x01 :\x05\x086"\x01mB\x01)B\x01\n:\x8e\x15\x08<"\x06{\n    :?\x08\x06"4// Number of false positives, comparison and matchesB\x05\n    :\xaa\x01\x08\x02:>\x08\x01:\x0e\x089:\x07\x086"\x03intB\x01 :\x0f\x086"\x08falseposB\x01 :\x15\x08\x03"\x02= :\r\x08\x04:\t\x080"\x010R\x02\x08\x01B\x02, :.\x08\x01:\x02\x089:\x0b\x086"\x04compB\x01 :\x15\x08\x03"\x02= :\r\x08\x04:\t\x080"\x010R\x02\x08\x01B\x02, :.\x08\x01:\x02\x089:\x0c\x086"\x05matchB\x01 :\x15\x08\x03"\x02= :\r\x08\x04:\t\x080"\x010R\x02\x08\x01B\x01;B\x06\n\n    :<\x08\x06"1// The linked list is empty, (head-&gt;index =-1)B\x05\n    :5\x08\x06"*// Hash code doesn\'t match with any stringB\x05\n    :\x81\x0e\x08\x98\x02"\x03if :P\x08;"\x01(:I\x08\x04:%\x086:\x08\x086"\x04head:\t\x084"\x05-&gt;:\t\x086"\x05indexB\x01 :\t\x084"\x02==B\x01 :\x05\x084"\x01-:\t\x080"\x011R\x02\x08\x01B\x01):\xa6\x02\x08C"\x01 :\x96\x02\x08<"\n{\n        :J\x08\x06";// Construct tuple with comp=0 and falsepos=0 and return itB\t\n        :\x95\x01\x08\x02:\x85\x01\x08\x01:\x17\x089:\t\x086"\x05tuple:\x05\x085"\x01*B\x01 :\x08\x086"\x01yB\x01 :[\x08\x03"\x02= :S\x08\x04:\n\x084"\x03newB\x01 :C\x08\x07:\t\x086"\x05tuple:4\x08h"\x01(:\x14\x08i:\x0c\x08\x04:\x08\x086"\x04compB\x02, :\x17\x08i:\x10\x08\x04:\x0c\x086"\x08falseposB\x01)B\x01;B\t\n        :"\x08\xaa\x02"\x07return :\x0c\x08\x04:\x05\x086"\x01yB\x01;B\x06\n    }B\x06\n\n    :&\x08\x06"\x1b// Linked list is not emptyB\x05\n    :\x1f\x08\x06"\x14// Hash code matchesB\x05\n    :\xaa\n\x08D"\x05else :\x9e\n\x08<"\n{\n        :B\x08\x06"3// Used to extract the substring from the string stB\t\n        :.\x08\x02:\x1f\x08\x01:\x11\x089:\n\x086"\x06stringB\x01 :\x05\x086"\x01xB\x01;B\t\n        :2\x08\x06"#// Used to traverse the linked listB\t\n        :M\x08\x02:=\x08\x01:\x16\x089:\x08\x086"\x04node:\x05\x085"\x01*B\x01 :\x08\x086"\x01tB\x01 :\x14\x08\x03"\x02= :\x0c\x08\x04:\x08\x086"\x04headB\x01;B\n\n\n        :7\x08\x06"(// While you don\'t reach the end of fileB\t\n        :\xdd\x07\x08\x95\x02"\x06while :.\x08;"\x01(:$\x08\x04:\x08\x086"\x01tB\x01 :\t\x084"\x02!=B\x01 :\x08\x086"\x04NULLB\x01)B\x01 :\x97\x07\x08<"\x0e{\n            :t\x08\x06"a// Increment the no of comparisons, because you are comparing a substring with the pattern stringB\r\n            :*\x08\x05:\x17\x08\x04:\x08\x086"\x04comp:\x06\x084"\x02++B\x01;B\r\n            :]\x08\x06"J// Extract the substring at index t-&gt;index till m length from string stB\r\n            :\x96\x01\x08\x05:\x82\x01\x08\x04:\x08\x086"\x01xB\x01 :\x08\x084"\x01=B\x01 :g\x08\x07:\x1d\x086:\x06\x086"\x02st:\x05\x084"\x01.:\n\x086"\x06substr:D\x08h"\x01(:+\x08i:#\x08\x04:\x1f\x086:\x05\x086"\x01t:\t\x084"\x05-&gt;:\t\x086"\x05indexB\x02, :\x10\x08i:\t\x08\x04:\x05\x086"\x01mB\x01)B\x01;B\r\n            :6\x08\x06"#// If the two string are same, thenB\r\n            :?\x08\x06",// hash code matches and string matches thenB\r\n            :5\x08\x06""// Increment the number of matchesB\r\n            :\xc6\x01\x08\x98\x02"\x03if :s\x08;"\x01(:l\x08\x04:O\x08\x07:\t\x086"\x05scomp:=\x08h"\x01(:\x11\x08i:\t\x08\x04:\x05\x086"\x01PB\x02, :\x11\x08i:\t\x08\x04:\x05\x086"\x01xB\x02, :\x10\x08i:\t\x08\x04:\x05\x086"\x01mB\x01)B\x01 :\t\x084"\x02==B\x01 :\t\x080"\x010R\x02\x08\x01B\x01):7\x08C"\x11\n                : \x08<:\x1c\x08\x05:\x18\x08\x04:\t\x086"\x05match:\x06\x084"\x02++B\x01;B\x0e\n\n            :%\x08\x06"\x12// Go to next nodeB\r\n            :I\x08\x05:9\x08\x04:\x08\x086"\x01tB\x01 :\x08\x084"\x01=B\x01 :\x1e\x086:\x05\x086"\x01t:\t\x084"\x05-&gt;:\x08\x086"\x04nextB\x01;B\n\n        }B\x06\n    }B\x06\n\n    :^\x08\x06"S// If matches=0, which means there were comparisons but no matches were found, thenB\x05\n    :%\x08\x06"\x1a// Set false positive as 1B\x05\n    :\x86\x01\x08\x98\x02"\x03if :0\x08;"\x01(:)\x08\x04:\x0c\x086"\x05matchB\x01 :\t\x084"\x02==B\x01 :\t\x080"\x010R\x02\x08\x01B\x01):B\x08C"\t\n        :3\x08<:/\x08\x05:+\x08\x04:\x0f\x086"\x08falseposB\x01 :\x08\x084"\x01=B\x01 :\t\x080"\x011R\x02\x08\x01B\x01;B\x06\n\n    :W\x08\x06"L// Make the tuple with values of comparisons and false postive and return itB\x05\n    :\x91\x01\x08\x02:\x85\x01\x08\x01:\x17\x089:\t\x086"\x05tuple:\x05\x085"\x01*B\x01 :\x08\x086"\x01xB\x01 :[\x08\x03"\x02= :S\x08\x04:\n\x084"\x03newB\x01 :C\x08\x07:\t\x086"\x05tuple:4\x08h"\x01(:\x14\x08i:\x0c\x08\x04:\x08\x086"\x04compB\x02, :\x17\x08i:\x10\x08\x04:\x0c\x086"\x08falseposB\x01)B\x01;B\x05\n    :\x1e\x08\xaa\x02"\x07return :\x0c\x08\x04:\x05\x086"\x01xB\x01;B\x02\n}B\x02\n\n:6\x08\x06"/// Adds a given item (index) to the linked listB\x01\n:\xcb\x06\x08\x0c:\x0f\x089:\x08\x086"\x04voidB\x01 :#\x086:\x0e\x086"\nlinkedlist:\x06\x084"\x02:::\x07\x086"\x03add:*\x08d"\x01(: \x08e:\x19\x08\x01:\x0e\x089:\x07\x086"\x03intB\x01 :\x05\x086"\x01iB\x01)B\x01\n:\xe0\x05\x08<"\x06{\n    :H\x08\x06"=// If the linked list is empty, then set the head-&gt;index=1B\x05\n    :\x89\x05\x08\x98\x02"\x03if :P\x08;"\x01(:I\x08\x04:%\x086:\x08\x086"\x04head:\t\x084"\x05-&gt;:\t\x086"\x05indexB\x01 :\t\x084"\x02==B\x01 :\x05\x084"\x01-:\t\x080"\x011R\x02\x08\x01B\x01):[\x08C"\t\n        :E\x08<:A\x08\x05:=\x08\x04:%\x086:\x08\x086"\x04head:\t\x084"\x05-&gt;:\t\x086"\x05indexB\x01 :\x08\x084"\x01=B\x01 :\x05\x086"\x01iB\x01;B\x05\n    :Z\x08\x06"O// If the linked list is not empty, then make a new node, and add it after headB\x05\n    :\xef\x02\x08D"\x05else :\xe3\x02\x08<"\n{\n        :X\x08\x02:I\x08\x01:\x16\x089:\x08\x086"\x04node:\x05\x085"\x01*B\x01 :\x08\x086"\x01tB\x01 : \x08\x03"\x02= :\x18\x08\x04:\n\x084"\x03newB\x01 :\x08\x086"\x04nodeB\x01;B\t\n        :I\x08\x05::\x08\x04:"\x086:\x05\x086"\x01t:\t\x084"\x05-&gt;:\t\x086"\x05indexB\x01 :\x08\x084"\x01=B\x01 :\x05\x086"\x01iB\x01;B\t\n        :d\x08\x05:U\x08\x04:!\x086:\x05\x086"\x01t:\t\x084"\x05-&gt;:\x08\x086"\x04nextB\x01 :\x08\x084"\x01=B\x01 :!\x086:\x08\x086"\x04head:\t\x084"\x05-&gt;:\x08\x086"\x04nextB\x01;B\t\n        :H\x08\x05:<\x08\x04:$\x086:\x08\x086"\x04head:\t\x084"\x05-&gt;:\x08\x086"\x04nextB\x01 :\x08\x084"\x01=B\x01 :\x05\x086"\x01tB\x01;B\x06\n    }B\x02\n}B\x02\n\n:[\x08\x10:-\x086:\x0e\x086"\nlinkedlist:\t\x084"\x02::B\x01~:\x0e\x086"\nlinkedlist:\t\x08d"\x02()B\x01\n:\x1a\x08<"\x06{\n    :\x0e\x08\x06"\x06//dtorB\x02\n}B\x01\nJ!\n\x16linkedlist/cpp/873.cpp\x12\x050.9.5\x18\x03'
p4
sb.